{
  "Uuid": "1239d457-8d01-48c3-b682-dea0661ab011",
  "IsCustomNode": false,
  "Description": "",
  "Name": "dynamo 1 (4)",
  "ElementResolver": {
    "ResolutionMap": {
      "Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      },
      "PolyCurve.IsClosed": {
        "Key": "Autodesk.DesignScript.Geometry.PolyCurve",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NumberType": "Double",
      "Id": "c8c6c956cc754f8fbc8c6e2cee491d63",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e5680bfa22234ed6b9009186e348b027",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number",
      "InputValue": 12.7
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NumberType": "Double",
      "Id": "3e3592fd26aa4c5f94756aa3dd20fca3",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "14021a38331c4569a32ce8782f82a659",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number",
      "InputValue": 52512.0
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NumberType": "Double",
      "Id": "23e55cd9a0d248bca64415f88a059b4b",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "61e82d9a5245462e9f15ef6bafcbedcd",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number",
      "InputValue": 1726.0
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NumberType": "Double",
      "Id": "ce919731abe14145978e4161056d1962",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bea73750f16747ab8f88c3fd612879ac",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number",
      "InputValue": 12.7
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NumberType": "Double",
      "Id": "85f15b34120b4f4dac33facfbbf292dd",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "57d4cab2a7cb4d2489acc04d7e48db98",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number",
      "InputValue": 12.7
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NumberType": "Double",
      "Id": "acdfea610fe343fbb7f024891376baaf",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "862f5bdd289348228e74480debb7946c",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number",
      "InputValue": 12.7
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "7b99dbbebb4c41c7a2f29337c976e182",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "bbef876ddc024d18a3a97571d7207073",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f717b5496b0b4a31b50f4a249034db53",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e53d4f053676439d8871fe93a3d2ec8f",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77a09456ea994342af6a667fb71f40cb",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af40a2d7a0c44d27881798ee891f4b3b",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fdecf2b4979e484d84f65a7e89c29133",
          "Name": "item5",
          "Description": "Item Index #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea0989bb59ac4d32ab8962b431761d22",
          "Name": "item6",
          "Description": "Item Index #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d863b3867fe54c269ca240a1bf50633f",
          "Name": "item7",
          "Description": "Item Index #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64056f9a517c4706b3e0bdadbcab79f3",
          "Name": "item8",
          "Description": "Item Index #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c954543d21ad40e6a7ad61da2462a0c6",
          "Name": "item9",
          "Description": "Item Index #9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b591535c50a9406f9b76f41ec0f4e2c6",
          "Name": "item10",
          "Description": "Item Index #10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f5967ed2b3e4531831ddf67a2f31296",
          "Name": "item11",
          "Description": "Item Index #11",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e1b0cf80cb243298736acfc59f130ab",
          "Name": "item12",
          "Description": "Item Index #12",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "efaee3f30156411fb0369a5b5150a181",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list from the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "ec4a1046ab46434dac76b89fa036f90c",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3fa9172224244c91a3b7923a6df4de31",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "[\"Number of Columns\",\n \"Area Of Raft (m^2)\",\n \"Compressive strength of Concrete Fc' (Mpa)\",\n \"Concrete Unit Weight (kN/m^3)\",\n \"Subgrade Modulus kN/m/m^2\",\n \"Column Area (m^2)\",\n \"Maximum Axial Load on Column in kN\",\n \"Total Axial load on Column (kN)\",\n \"Thickness of Raft (mm)\",\n \"Preffered Dia of Bars (mm) in Bottom direction X direction\",\n \"Preffered Dia of Bars (mm) X Top direction\",\n \"Preffered Dia of Bars (mm) Bottom Y direction\",\n \"Preffered Dia of Bars (mm) Top Y direction\"];"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "eeb6edeeea0d4e21a6039fe9095a4e82",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "acf88ad543924f46bf740bf8abd06a95",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc97dd79e4bd4f198380dc2ac2814cf2",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a3168ce597f4bcab5e3f5b542cbb950",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list from the given inputs"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NumberType": "Double",
      "Id": "a5e9d450ea7648db848d513b9445c60e",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c3d677ed8dc84068a714cd3826de3262",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number",
      "InputValue": 18800.0
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a126f6d629184c58862e8b0ab4a9760c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "efa2b3d9d64c4924b18ceaf1bd1909b0",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d74f5b0ca8c64af190a805acd9ba4dcc",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "1376aa59d49b4fb28a142f360c39023f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "b8940cb879c041d49a465ab1fb3c18e5",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29c168cdf04f4c26bc87a1bb2e4136f8",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57e00c353feb4308b50a7c233a53865a",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "0a4f5ef8c2364852bef2254be897de4b",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5e59ba66bd904bac83443754508e0a5e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "1;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6542bcc811b04f7e9108b8de397480fc",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ea246c6ced2f4ca3825579a2c3ab25c3",
          "Name": "hostElement",
          "Description": "The element that will host the PathReinforcement. The host can be a Structural Floor, Structural Wall, Structural Slab, or a Part created from a structural layer belonging to one of those element types.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1351208606646e096af09453b0c2c1e",
          "Name": "curvesPath",
          "Description": "A list of curves that will define the outline of the PathReinforcement.\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70d41da77511488e9170bf845b5918a1",
          "Name": "layoutRule",
          "Description": "Toggle to set Layout Rule: True = Maximum Spacing, False = Fixed Number.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e50c63002f554c738bab804fe0a44cb5",
          "Name": "flip",
          "Description": "A flag controlling the bars relative to the curves.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b89ea0112c7649bda8abf36101187239",
          "Name": "face",
          "Description": "Toggle to set Face: True = Top, False = Bottom.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c7bb28212d884e4baa3b2b25a5d28c43",
          "Name": "primaryBarType",
          "Description": "Primary Bar Type.\n\nElement\nDefault value : StructuralDesign.Model.Default.SetValue()",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22346c62657e4a17ad2f79fa43026051",
          "Name": "primaryBarShape",
          "Description": "The RebarShape element that defines the shape of the rebars in the object.\n\nElement\nDefault value : StructuralDesign.Model.Default.SetValue()",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57ab655e03054b749c9f7729f51e2a70",
          "Name": "primarySpacing",
          "Description": "Primary Spacing.\n\ndouble\nDefault value : 300",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9562b9ca52f84317be32665aa9da018c",
          "Name": "primaryNumberLines",
          "Description": "Primary Number Lines.\n\nint\nDefault value : 4",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "308b0bda95c04676ad5aab8fe136ffcf",
          "Name": "primaryBarLength",
          "Description": "Primary Bar Length.\n\ndouble\nDefault value : 2000",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5be432bee21d446f936c4a71604a9eaa",
          "Name": "alternatingBarType",
          "Description": "Alternating Bar Type. If it is not set then Alternating Bars are not created.\n\nElement\nDefault value : StructuralDesign.Model.Default.SetValue()",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2767ec6d49244521b9d57e5c70c97762",
          "Name": "alternatingBarShape",
          "Description": "The RebarShape element that defines the shape of the alternating rebars in the object.\n\nElement\nDefault value : StructuralDesign.Model.Default.SetValue()",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79a1e54648224350a7214fd702ed3c8c",
          "Name": "alternatingBarLength",
          "Description": "Alternating Bar Length.\n\ndouble\nDefault value : 2000",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2fb7a694c5c1402d938ac8b01a28c40d",
          "Name": "alternatingBarOffset",
          "Description": "Alternating Bar Offset.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d338ae9b4ba74961a35e8ea33b5d4898",
          "Name": "PathReinforcement",
          "Description": "Path Reinforcement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "StructuralDesign.Rebar.PathReinforcement.PathReinforcement.CreateByCurveAndShapeCode@Revit.Elements.Element,Autodesk.DesignScript.Geometry.Curve[],bool,bool,bool,Revit.Elements.Element,Revit.Elements.Element,double,int,double,Revit.Elements.Element,Revit.Elements.Element,double,double",
      "Replication": "Auto",
      "Description": "Creates a new PathReinforcement object from an array of curves and given Rebar Shape id.\n\nPathReinforcement.CreateByCurveAndShapeCode (hostElement: Element, curvesPath: Curve[], layoutRule: bool = true, flip: bool = true, face: bool = true, primaryBarType: Element = StructuralDesign.Model.Default.SetValue(), primaryBarShape: Element = StructuralDesign.Model.Default.SetValue(), primarySpacing: double = 300, primaryNumberLines: int = 4, primaryBarLength: double = 2000, alternatingBarType: Element = StructuralDesign.Model.Default.SetValue(), alternatingBarShape: Element = StructuralDesign.Model.Default.SetValue(), alternatingBarLength: double = 2000, alternatingBarOffset: double = 0): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "fbb55514fcf94202afbb6a24bacf22de",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f46e550b4dfe4c6398e35e1dbe6db3a2",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": true
    },
    {
      "ConcreteType": "StructuralDesign.Rebar.RevitRebarBarType, StructuralDesign.DropDownNodes",
      "SelectedIndex": -1,
      "SelectedString": "",
      "Id": "cdd111caa8c44a6badd4fec077ab7b92",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6799c19d0e6b42a69f3b6943712f8ac6",
          "Name": "RebarBarType",
          "Description": "The selected RebarBarType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select Rebar Bar Type"
    },
    {
      "ConcreteType": "StructuralDesign.Rebar.RevitRebarShape, StructuralDesign.DropDownNodes",
      "SelectedIndex": -1,
      "SelectedString": "",
      "Id": "90375a535d2a4d34837a5b6b44123011",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d62ed987c1fd45fe8e0ec696102709c0",
          "Name": "RebarShape",
          "Description": "The selected RebarShape",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select Rebar Shape"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "a11d9f57678a450e82641703a68e609e",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "074e02e8b8664702a30aad87eef564b7",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": false
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5b0c7c0c7d824e0893435301ba21797c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6f32838945cb4be6bc1bce111b886300",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b16c8947f787413780ab6435163be4df",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21bbb42218b24a6f8a10927373e4ecd2",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2fc854304be54e69a17d061bba516849",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9d7690590e8a4d659453ab89c5e4f952",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7fe3515ac56846b19a4755e041ff25fd",
          "Name": "outlineCurves",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "969dcfd575a1434085611c821dbddd49",
          "Name": "floorType",
          "Description": "FloorType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e2f4ad05ac83483a8a8be32b138af5c4",
          "Name": "level",
          "Description": "Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e5e7d258564a493f9989d3270e1cbf15",
          "Name": "Floor",
          "Description": "The floor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Floor.ByOutlineTypeAndLevel@Autodesk.DesignScript.Geometry.Curve[],Revit.Elements.FloorType,Revit.Elements.Level",
      "Replication": "Auto",
      "Description": "Create a Revit Floor given its curve outline and Level\n\nFloor.ByOutlineTypeAndLevel (outlineCurves: Curve[], floorType: FloorType, level: Level): Floor"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "fc72e8ed38c9438f98ad671195ffba67",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "12131df5bf3d45a4a73f15a67aeb64bc",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": true
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "f1ac3f16309044739269bc62879f758f",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1335df5696a2498987b88d0f665658ec",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "Structural"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FloorTypes, DSRevitNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "150mm Foundation Slab",
      "Id": "7054b37a485442ac804b72bf101c29a3",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "05e9a281e2cf47858cff16853d6fec65",
          "Name": "Floor Type",
          "Description": "The selected Floor Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All floor types available in the document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "de98fab12e704a1ca51be38055263691",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ee3d1fd9b44f4b1a92070dc7749dd9f2",
          "Name": "elevation",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0d80062235e4dbf95f3bd20e0a2c71f",
          "Name": "Level",
          "Description": "Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Level.ByElevation@double",
      "Replication": "Auto",
      "Description": "Create a Revit Level given it's elevation. The name will be whatever Revit gives it.\n\nLevel.ByElevation (elevation: double): Level"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "3af53ae0d71d41698fdf53e78c4eb18e",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7a3d9185c9474de19a5755141e2fbbdd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "-2000;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "93bb51cea7414438a198cbf69e181a19",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d258e1895b8749cba11b7b9834dd744e",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "295ca1d248c448fe96f2a8b569f6a1da",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2f78df757744c7da71bdc4255be99ef",
          "Name": "z",
          "Description": "Z coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e432be006cd45d89abdffbc950a2b1b",
          "Name": "Point",
          "Description": "Point created by coordinates",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "765a3f3943364bda82119a611be86085",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fa75213407974d6d9163f8e920d155c5",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d33fed293c94fda8f3297b2376d74b4",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f94200339fb943609d5f17626486bc6b",
          "Name": "z",
          "Description": "Z coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6eb34d20488408ba9d7e83cf2ad5939",
          "Name": "Point",
          "Description": "Point created by coordinates",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c9197414973f40ef9f7ec7ff11c59511",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8ca0942485494510b85103ab982ce0bd",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9fd06025adbb42948aa3fde155c09247",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e73bfd718ac7427f8aca102ead0fcb53",
          "Name": "z",
          "Description": "Z coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9487f6ae67b249c7b6011d9f53340684",
          "Name": "Point",
          "Description": "Point created by coordinates",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "f26aca188e8b44cf8c2b952d4f5eddce",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "32fe727245924dbca8d397bbb8043506",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c033b795dcec41f98e8271bf669c5bb5",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42b97157701647b08faa395e1b88d7f7",
          "Name": "z",
          "Description": "Z coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3cdc882ce1444ce3968eaeac17da8146",
          "Name": "Point",
          "Description": "Point created by coordinates",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "5362d2c17ee240d9a8985e9204551288",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a675d854d2064dfb85152e7e8d32427d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "-2000;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "9219af837a7b4eed9099295657c71c54",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0eec8b3aecb64006961951fbdf8aab14",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4bb1517308649c98decdf850ec28dd3",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e1a00c9a378344b48489e62f8636a148",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2fcc254d9c5f485fb89f5573fabd93e2",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7e09eaf38aec49d8b431fba05e9535e4",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb06f60bee134fffb75ae23c28f3f932",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9b0a7f6d8914985bd9879c6ce252d36",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "cf25ea87dbfa4275b8591db1c9dbc94b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "184b58314faa495ea280c89975d0c0cf",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb8e13831b174f9b8340b37a6c29863a",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f174a236ea1342bb80caf07d9fc7c733",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "810de09ef6724226b9a3edf9df5c9d23",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "6bae62699dd344baad01159443512ea2",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d944acba6aa4664a43acfeb0537f6b0",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "98069edb00bc4bcba9e4649e4d4ea897",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "Id": "d7638c77456e466ca0d9c8af32a72b57",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "681006059d7d49e0809f5fefe2ef5918",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8232ab0b449b4d94bf5dc3607f73ba7c",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1387455c79a47728d00abc9ce0c8937",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "539818020a5548bd9f38154916b9e153",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "564c6f59d231443aa91fa0eeffb55ee6",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list from the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d49076c72a1c4f2e9b093bd3e5e2fbaf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "8f7aa61764934e8eac61a6d066163f7c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82fd75ba0ce549d7a59bc71304c75279",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54160a0d7b47405087d7b05f648293d8",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c6f4f4e0f8b04bfdb6b1c16d6f65d8c4",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cf3ebe6e7bcb4860b0dfcc2cd7305e9a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b80a0be53f774028a00c2ef1c0222aba",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d40c2decda24124b7e72eff4b5252f3",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7d8ac16ea4064d2aabdff51037622673",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2d33ca78791d4ad19198ca219ff7af49",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38d88f91ad574824bf92771d1f3ef4ef",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a333121b1170437caa192d5074828106",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "655486b6490d4ae6bb46a4c6db0a640e",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f57cdb474f8c440f888acd1c33e8c42f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "4;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "19ef5594db354958a7fc9320eb208d9e",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a10e71268cfd470aa608f4c462f4216b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "10;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "e3621b26218a4e059b84f3b810389549",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "10062dffd4234d9d9f0cffc129712371",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "7;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c07b0223b1ac477dadb5c5a9fcf5cc99",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fa23531a54e249698fcd18048b4ae007",
          "Name": "hostElement",
          "Description": "The element that will host the PathReinforcement. The host can be a Structural Floor, Structural Wall, Structural Slab, or a Part created from a structural layer belonging to one of those element types.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1fa9cef89634f838becdb79ba4d3531",
          "Name": "curvesPath",
          "Description": "A list of curves that will define the outline of the PathReinforcement.\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45f1187a742045b5b0ab8ed3357323b7",
          "Name": "layoutRule",
          "Description": "Toggle to set Layout Rule: True = Maximum Spacing, False = Fixed Number.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a424945c39c40548209106531887ecf",
          "Name": "flip",
          "Description": "A flag controlling the bars relative to the curves.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6206765c13604208aa7cb4950b97ab2e",
          "Name": "face",
          "Description": "Toggle to set Face: True = Top, False = Bottom.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91b3d8dca6d24dc191bb7115a64aea09",
          "Name": "primaryBarType",
          "Description": "Primary Bar Type.\n\nElement\nDefault value : StructuralDesign.Model.Default.SetValue()",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a7aefa6953e43e58c7344792363fd56",
          "Name": "primaryBarShape",
          "Description": "The RebarShape element that defines the shape of the rebars in the object.\n\nElement\nDefault value : StructuralDesign.Model.Default.SetValue()",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "585843c516d8471ea1a006c2b5723d09",
          "Name": "primarySpacing",
          "Description": "Primary Spacing.\n\ndouble\nDefault value : 300",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "50341a436d3c47039b587cecf8ffcede",
          "Name": "primaryNumberLines",
          "Description": "Primary Number Lines.\n\nint\nDefault value : 4",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf9211b5b4a04cefaaed9cb2c4a56269",
          "Name": "primaryBarLength",
          "Description": "Primary Bar Length.\n\ndouble\nDefault value : 2000",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd3e984f0068460eb720a0dbb3633657",
          "Name": "alternatingBarType",
          "Description": "Alternating Bar Type. If it is not set then Alternating Bars are not created.\n\nElement\nDefault value : StructuralDesign.Model.Default.SetValue()",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a85430e84f5b47aea6383e1e8cb2cefa",
          "Name": "alternatingBarShape",
          "Description": "The RebarShape element that defines the shape of the alternating rebars in the object.\n\nElement\nDefault value : StructuralDesign.Model.Default.SetValue()",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a7abfc2ebdd4dcabc04cb099b97662c",
          "Name": "alternatingBarLength",
          "Description": "Alternating Bar Length.\n\ndouble\nDefault value : 2000",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9def46689ec440eb3e8ffe5667171a3",
          "Name": "alternatingBarOffset",
          "Description": "Alternating Bar Offset.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d386e6673f54fa8a7b138ba993e0fb8",
          "Name": "PathReinforcement",
          "Description": "Path Reinforcement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "StructuralDesign.Rebar.PathReinforcement.PathReinforcement.CreateByCurveAndShapeCode@Revit.Elements.Element,Autodesk.DesignScript.Geometry.Curve[],bool,bool,bool,Revit.Elements.Element,Revit.Elements.Element,double,int,double,Revit.Elements.Element,Revit.Elements.Element,double,double",
      "Replication": "Auto",
      "Description": "Creates a new PathReinforcement object from an array of curves and given Rebar Shape id.\n\nPathReinforcement.CreateByCurveAndShapeCode (hostElement: Element, curvesPath: Curve[], layoutRule: bool = true, flip: bool = true, face: bool = true, primaryBarType: Element = StructuralDesign.Model.Default.SetValue(), primaryBarShape: Element = StructuralDesign.Model.Default.SetValue(), primarySpacing: double = 300, primaryNumberLines: int = 4, primaryBarLength: double = 2000, alternatingBarType: Element = StructuralDesign.Model.Default.SetValue(), alternatingBarShape: Element = StructuralDesign.Model.Default.SetValue(), alternatingBarLength: double = 2000, alternatingBarOffset: double = 0): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "b19c802e7ec04bcf82e75edb08fed4ae",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3964f29f4e1547b89ce825af2a4563ac",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": false
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "406a8712df3b4319a070298b60769e56",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9621fd5bb077462fa3655dc09eff6b53",
          "Name": "hostElement",
          "Description": "The element that will host the PathReinforcement. The host can be a Structural Floor, Structural Wall, Structural Slab, or a Part created from a structural layer belonging to one of those element types.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c673bb49d2a545ef8239ddb1a1168c2f",
          "Name": "curvesPath",
          "Description": "A list of curves that will define the outline of the PathReinforcement.\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e1ae40138124598916f3caa08c79295",
          "Name": "layoutRule",
          "Description": "Toggle to set Layout Rule: True = Maximum Spacing, False = Fixed Number.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b298e751614f41b8a775d6a564e400fb",
          "Name": "flip",
          "Description": "A flag controlling the bars relative to the curves.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "587518f7f07948e5a7f15d86aa83c1a5",
          "Name": "face",
          "Description": "Toggle to set Face: True = Top, False = Bottom.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3ca2783cdd404b34831fb570549c9d72",
          "Name": "primaryBarType",
          "Description": "Primary Bar Type.\n\nElement\nDefault value : StructuralDesign.Model.Default.SetValue()",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2c6a4ccc0b643dba561b9dac62e88d6",
          "Name": "primaryBarShape",
          "Description": "The RebarShape element that defines the shape of the rebars in the object.\n\nElement\nDefault value : StructuralDesign.Model.Default.SetValue()",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4886fffca781428cb8283d43a9c8fd4b",
          "Name": "primarySpacing",
          "Description": "Primary Spacing.\n\ndouble\nDefault value : 300",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d316f87114b040ecb8641102bd140e20",
          "Name": "primaryNumberLines",
          "Description": "Primary Number Lines.\n\nint\nDefault value : 4",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aeaba43526d8481880f4e57103c701ba",
          "Name": "primaryBarLength",
          "Description": "Primary Bar Length.\n\ndouble\nDefault value : 2000",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3fb1fee1e4174fd4bd13c5dcf96a23a2",
          "Name": "alternatingBarType",
          "Description": "Alternating Bar Type. If it is not set then Alternating Bars are not created.\n\nElement\nDefault value : StructuralDesign.Model.Default.SetValue()",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8bf88a8f4b8c443eba801c387ced2426",
          "Name": "alternatingBarShape",
          "Description": "The RebarShape element that defines the shape of the alternating rebars in the object.\n\nElement\nDefault value : StructuralDesign.Model.Default.SetValue()",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7906849a79e848908cc64c8701c791e1",
          "Name": "alternatingBarLength",
          "Description": "Alternating Bar Length.\n\ndouble\nDefault value : 2000",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9d0f25cfcac461aae7ec8ffcfdb602d",
          "Name": "alternatingBarOffset",
          "Description": "Alternating Bar Offset.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "914b4c0b553047d7aa036973b78c987a",
          "Name": "PathReinforcement",
          "Description": "Path Reinforcement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "StructuralDesign.Rebar.PathReinforcement.PathReinforcement.CreateByCurveAndShapeCode@Revit.Elements.Element,Autodesk.DesignScript.Geometry.Curve[],bool,bool,bool,Revit.Elements.Element,Revit.Elements.Element,double,int,double,Revit.Elements.Element,Revit.Elements.Element,double,double",
      "Replication": "Auto",
      "Description": "Creates a new PathReinforcement object from an array of curves and given Rebar Shape id.\n\nPathReinforcement.CreateByCurveAndShapeCode (hostElement: Element, curvesPath: Curve[], layoutRule: bool = true, flip: bool = true, face: bool = true, primaryBarType: Element = StructuralDesign.Model.Default.SetValue(), primaryBarShape: Element = StructuralDesign.Model.Default.SetValue(), primarySpacing: double = 300, primaryNumberLines: int = 4, primaryBarLength: double = 2000, alternatingBarType: Element = StructuralDesign.Model.Default.SetValue(), alternatingBarShape: Element = StructuralDesign.Model.Default.SetValue(), alternatingBarLength: double = 2000, alternatingBarOffset: double = 0): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8f5e94002e8f4548a87e6c41c4c82331",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "7300a634e6404687a5158fe15b72e414",
          "Name": "hostElement",
          "Description": "The element that will host the PathReinforcement. The host can be a Structural Floor, Structural Wall, Structural Slab, or a Part created from a structural layer belonging to one of those element types.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0f4580086b3b42b1b4d037072d4bd9d0",
          "Name": "curvesPath",
          "Description": "A list of curves that will define the outline of the PathReinforcement.\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3824c43349644514a3dd5c61e642b6d3",
          "Name": "layoutRule",
          "Description": "Toggle to set Layout Rule: True = Maximum Spacing, False = Fixed Number.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "795ef558ca464af38bf8216d015481c1",
          "Name": "flip",
          "Description": "A flag controlling the bars relative to the curves.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad1a1ec36aac490882a1201d7b156e7d",
          "Name": "face",
          "Description": "Toggle to set Face: True = Top, False = Bottom.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "07e59ef8c46346ee9a0dd759662e20c6",
          "Name": "primaryBarType",
          "Description": "Primary Bar Type.\n\nElement\nDefault value : StructuralDesign.Model.Default.SetValue()",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a27c03b7c8046e6a19a75b8006450c1",
          "Name": "primaryBarShape",
          "Description": "The RebarShape element that defines the shape of the rebars in the object.\n\nElement\nDefault value : StructuralDesign.Model.Default.SetValue()",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75f41198c3bc473b9833c0d9e6694441",
          "Name": "primarySpacing",
          "Description": "Primary Spacing.\n\ndouble\nDefault value : 300",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91e0468d19e540deb766e7d93ef62dde",
          "Name": "primaryNumberLines",
          "Description": "Primary Number Lines.\n\nint\nDefault value : 4",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7287ff4bc7d047979d44f75978519bbd",
          "Name": "primaryBarLength",
          "Description": "Primary Bar Length.\n\ndouble\nDefault value : 2000",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3959ef091cd46b9b765ce0bf733d61c",
          "Name": "alternatingBarType",
          "Description": "Alternating Bar Type. If it is not set then Alternating Bars are not created.\n\nElement\nDefault value : StructuralDesign.Model.Default.SetValue()",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "626adfdf0de048e6b2a501ef48f0f272",
          "Name": "alternatingBarShape",
          "Description": "The RebarShape element that defines the shape of the alternating rebars in the object.\n\nElement\nDefault value : StructuralDesign.Model.Default.SetValue()",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af734912b2e84694b3f4c1ffdee7414d",
          "Name": "alternatingBarLength",
          "Description": "Alternating Bar Length.\n\ndouble\nDefault value : 2000",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d868f0f0351f404b94b41a2d50a0c1cf",
          "Name": "alternatingBarOffset",
          "Description": "Alternating Bar Offset.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "edb1470abd7a46688f20a657b13c643c",
          "Name": "PathReinforcement",
          "Description": "Path Reinforcement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "StructuralDesign.Rebar.PathReinforcement.PathReinforcement.CreateByCurveAndShapeCode@Revit.Elements.Element,Autodesk.DesignScript.Geometry.Curve[],bool,bool,bool,Revit.Elements.Element,Revit.Elements.Element,double,int,double,Revit.Elements.Element,Revit.Elements.Element,double,double",
      "Replication": "Auto",
      "Description": "Creates a new PathReinforcement object from an array of curves and given Rebar Shape id.\n\nPathReinforcement.CreateByCurveAndShapeCode (hostElement: Element, curvesPath: Curve[], layoutRule: bool = true, flip: bool = true, face: bool = true, primaryBarType: Element = StructuralDesign.Model.Default.SetValue(), primaryBarShape: Element = StructuralDesign.Model.Default.SetValue(), primarySpacing: double = 300, primaryNumberLines: int = 4, primaryBarLength: double = 2000, alternatingBarType: Element = StructuralDesign.Model.Default.SetValue(), alternatingBarShape: Element = StructuralDesign.Model.Default.SetValue(), alternatingBarLength: double = 2000, alternatingBarOffset: double = 0): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "564b52815d8148d7af4e6ab5c1022be8",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "82b80e17cfd8422886b4ea19264dc15b",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8081a3068fdd4f20b252977c015adf1f",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b94e4a2aa5314e18bc2a1e9876bc176e",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9aa68a35c37a449db664d1acab7efd14",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "14064d60a9414803ad8964039109e42f",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Round@double",
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6eb30f16a02245c98799047dae01088c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1942cd7fefca43edb5a5f520eb90c737",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f4012edfcf146b7a65c93b4b4342e63",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "952c4668fd5244938b38acf22a34f98a",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "Id": "3353abec2cfc4911b210937f13bfb18b",
      "NodeType": "StringInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e0cf235a79db456488875859afa63ad3",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string",
      "InputValue": "Default Thickness"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "4594f3d5-0f30-4b8b-9d8a-5280d4d0db01-0019520b"
      ],
      "Id": "bac27616c6ce4b319a3ab1fb10b6132d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1db3352bc36a4c2aa464200ed445bee4",
          "Name": "Element",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a model element from the document."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference('RevitServices')\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\n# Inputs from Dynamo\r\nelement = UnwrapElement(IN[0])  # Selected Revit element\r\nmaterial_index = 0  # Index of the material to inspect if the element has multiple materials\r\n\r\n# Conversion Factor for Density\r\nkgft3_to_kgm3 = 35.3147\r\n\r\n# Get the active document\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Retrieve the material from the selected element\r\nmaterial = None\r\n\r\nif isinstance(element, FamilyInstance) or isinstance(element, Wall):\r\n    # Handle specific element types to extract the material\r\n    material_ids = element.GetMaterialIds(False)\r\n    if len(material_ids) > material_index:\r\n        material = doc.GetElement(material_ids[material_index])\r\n\r\nif material is not None:\r\n    # Get Structural Asset Id\r\n    structural_asset_id = material.StructuralAssetId\r\n    if structural_asset_id != ElementId.InvalidElementId:\r\n        # Get Structural Asset\r\n        asset_element = doc.GetElement(structural_asset_id)\r\n        structural_asset = asset_element.GetStructuralAsset()\r\n        \r\n        # Extract Density in kg/ft³\r\n        density_kgft3 = structural_asset.Density\r\n        \r\n        # Convert to kg/m³\r\n        density_kgm3 = density_kgft3 * kgft3_to_kgm3\r\n    else:\r\n        density_kgm3 = \"No structural asset associated with the material\"\r\nelse:\r\n    density_kgm3 = \"Material not found in the selected element\"\r\n#convert kg/m3 to KN/m3\r\nOUT = round(density_kgm3*0.009817,2)\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e2820c690ba842ed862c47ffba92699c",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "e19bb2da9a2f4bd290181f5d69c8d1e9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fed8532261d04eda87de0477d2b426a4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference('RevitServices')\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\n# Inputs from Dynamo\r\nelement = UnwrapElement(IN[0])  # Selected Revit element\r\nmaterial_index = 0  # Index of the material to inspect if the element has multiple materials\r\n\r\n\r\n# Get the active document\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# Retrieve the material from the selected element\r\nmaterial = None\r\n\r\nif isinstance(element, FamilyInstance) or isinstance(element, Wall):\r\n    # Handle specific element types to extract the material\r\n    material_ids = element.GetMaterialIds(False)\r\n    if len(material_ids) > material_index:\r\n        material = doc.GetElement(material_ids[material_index])\r\n\r\nif material is not None:\r\n    # Get Structural Asset Id\r\n    structural_asset_id = material.StructuralAssetId\r\n    if structural_asset_id != ElementId.InvalidElementId:\r\n        # Get Structural Asset\r\n        asset_element = doc.GetElement(structural_asset_id)\r\n        structural_asset = asset_element.GetStructuralAsset()\r\n        \r\n        Compressive_Strength = structural_asset.ConcreteCompression\r\n        \r\n    else:\r\n        CompressiveStrength = \"No structural asset associated with the material\"\r\nelse:\r\n    CompressiveStrength = \"Material not found in the selected element\"\r\n# converting N/ft.m Revit's Inbuilt Concrete Compression Unit and rounding to two decimal places\r\nOUT = round(Compressive_Strength/304800,2)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "60ef52da9fa24771bcc45f024a9b21d2",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "47f93769d1004955a83f55067089a721",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f18a9443e064ef6b5dded2589d86a6c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "Id": "43620575367b4303a22109d113b7456e",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "be1de53a34ef407d98a0b372c9c15003",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe57936e3c1b4f358bfbf4ffc05dabcb",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 596,
      "SelectedString": "OST_StructuralColumns",
      "Id": "155845ed78454bdc81f46f08f39efc89",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5e98ef1529674c0dbc44045c976f6338",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nsys.path.append(r'C:\\\\Users\\\\Asad\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python39\\\\lib\\\\site-packages')\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nimport math\r\nimport pandas as pd\r\nimport numpy as np\r\nfrom sklearn.preprocessing import StandardScaler, PolynomialFeatures\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.metrics import r2_score\r\nimport xgboost as xgb\r\nimport warnings\r\nwarnings.filterwarnings('ignore')\r\n\r\n# ------------------ Step 1: Load Excel Data ------------------\r\nfile_path = r\"C:\\Users\\Asad\\Downloads\\Expanded Design data of raft.xlsx\"\r\ndf = pd.read_excel(file_path)\r\n\r\n# ------------------ Step 2: Define Input & Output Features ------------------\r\nX = df[[ \r\n    'Number of  Columns', 'Area Of Raft (m^2)', \"Compressive strength of Concrete Fc' (Mpa)\",\r\n    'Concrete Unit Weight (kN/m^3)', 'Subgrade Modulus kN/m/m^2',\r\n    'Column Area (m^2)', 'Maximum Axial Load on Column in kN',\r\n    'Total Axial load on Column (kN)', 'Thickness of Raft (mm)',\r\n    'Preffered Dia of Bars (mm) in Bottom direction X direction',\r\n    'Preffered Dia of Bars (mm) X Top direction',\r\n    'Preffered Dia of Bars (mm) Bottom Y direction',\r\n    'Preffered Dia of Bars (mm) Top Y direction'\r\n]]\r\n\r\ny = df[[ \r\n    'Bottom As (mm^2/m) X strip',\r\n    'Top As (mm^2/m) X strip',\r\n    'Bottom As (mm^2/m) Y strip',\r\n    'Top As (mm^2/m) Y strip'\r\n]]\r\n\r\n# ------------------ Step 3: Split and Scale ------------------\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\r\nscaler = StandardScaler()\r\nX_train_scaled = scaler.fit_transform(X_train)\r\nX_test_scaled = scaler.transform(X_test)\r\n\r\n# Polynomial Features\r\npoly = PolynomialFeatures(degree=2, include_bias=False)\r\nX_train_poly = poly.fit_transform(X_train_scaled)\r\nX_test_poly = poly.transform(X_test_scaled)\r\n\r\n# ------------------ Step 4: Train XGBoost Models ------------------\r\nxgb_params = {\r\n    'max_depth': 4,\r\n    'min_child_weight': 5,\r\n    'subsample': 0.8,\r\n    'colsample_bytree': 0.8,\r\n    'reg_alpha': 0.1,\r\n    'reg_lambda': 1.0,\r\n    'learning_rate': 0.05,\r\n    'n_estimators': 1000,\r\n    'random_state': 42\r\n}\r\n\r\nxgb_models = []\r\nfor i in range(y.shape[1]):\r\n    model = xgb.XGBRegressor(**xgb_params, early_stopping_rounds=50)\r\n    model.fit(X_train_poly, y_train.iloc[:, i], eval_set=[(X_test_poly, y_test.iloc[:, i])], verbose=False)\r\n    xgb_models.append(model)\r\n\r\n# ------------------ Step 5: Spacing and Count Calculations ------------------\r\ndef calculate_bar_spacing_and_count(area_required, bar_diameter, strip_width=1000):\r\n    area_required = max(area_required, 0)\r\n    bar_area = (math.pi * bar_diameter ** 2) / 4\r\n\r\n    if bar_area <= 0:\r\n        return 200, 1\r\n\r\n    num_bars_per_meter = area_required / bar_area\r\n    if num_bars_per_meter > 0:\r\n        spacing = strip_width / num_bars_per_meter\r\n        spacing = round(spacing / 5) * 5\r\n        num_bars = math.ceil(strip_width / spacing) + 1\r\n    else:\r\n        spacing = strip_width\r\n        num_bars = 1\r\n\r\n    min_spacing = max(3 * bar_diameter, 75)\r\n    max_spacing = 200\r\n    spacing = max(min_spacing, min(spacing, max_spacing))\r\n    num_bars = math.ceil(strip_width / spacing) + 1\r\n\r\n    return spacing, num_bars\r\n\r\ndef predict_with_calculations(y_pred_areas, X_original):\r\n    all_predictions = np.zeros((y_pred_areas.shape[0], 12))\r\n    for i in range(y_pred_areas.shape[0]):\r\n        # Extract bar diameters\r\n        bottom_x_dia = X_original[i][9]\r\n        top_x_dia = X_original[i][10]\r\n        bottom_y_dia = X_original[i][11]\r\n        top_y_dia = X_original[i][12]\r\n\r\n        current_areas = y_pred_areas[i]\r\n        if len(current_areas.shape) > 1:\r\n            current_areas = current_areas.flatten()\r\n        areas = [max(area, 0) for area in current_areas]\r\n        diameters = [bottom_x_dia, top_x_dia, bottom_y_dia, top_y_dia]\r\n\r\n        for j, (area, dia) in enumerate(zip(areas, diameters)):\r\n            spacing, num_bars = calculate_bar_spacing_and_count(area, dia)\r\n            all_predictions[i, j * 3:(j + 1) * 3] = [area, spacing, num_bars]\r\n\r\n    return all_predictions.tolist()\r\n\r\n# ------------------ Step 6: Dynamo IN Prediction ------------------\r\ndataEnteringNode = IN\r\ninput_data = IN[0]  # Expecting [[labels], [values]]\r\nif not input_data or len(input_data) < 2:\r\n    OUT = \"Invalid input structure. Expecting [[labels], [values]]\"\r\nelse:\r\n    try:\r\n        # Convert to numpy\r\n        input_values = np.array([input_data[1]])  # 1 row\r\n        input_scaled = scaler.transform(input_values)\r\n        input_poly = poly.transform(input_scaled)\r\n\r\n        # Predict areas\r\n        area_preds = np.array([model.predict(input_poly) for model in xgb_models]).T  # shape: (1, 4)\r\n\r\n        # Combine with original X input row to get bar diameters\r\n        final_output = predict_with_calculations(area_preds, [input_data[1]])\r\n\r\n        OUT = final_output  # List of [As, spacing, bar_count] × 4 strips\r\n\r\n    except Exception as e:\r\n        OUT = \"Error during prediction: \" + str(e)\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "27c147c1f8534626a0dee3fd9e96c115",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "0afb0e50d326441f9d400918d30ff089",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39e40c8d67ba47f5ab690da1e5e33b0e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "df9c7fb0e2bc44728b138f78f9b7a783",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "9b50553969494126b592dcd6015732bf",
          "Name": "list",
          "Description": "List to take from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d8e775fde314fc09cc7fc8e4b0caeba",
          "Name": "amount",
          "Description": "Amount of items to take. If negative, items are taken from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ce0d4de8909a45ac852aa39ee3b9bbcb",
          "Name": "list",
          "Description": "List of extracted items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.TakeItems@var[]..[],int",
      "Replication": "Auto",
      "Description": "Fetches an amount of items from the start of the list.\n\nList.TakeItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "22bbbcab0689426db812ef23dd7195cc",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0cd50b4ec1f74d62a6eac4117de7f2d1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "9;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nsys.path.append(r'C:\\\\Users\\\\Asad\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python39\\\\lib\\\\site-packages')\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# Make sure ML libraries are accessible (you already used sys.path.append in Dynamo startup script)\r\nimport pandas as pd\r\nimport numpy as np\r\nfrom sklearn.ensemble import ExtraTreesRegressor\r\nfrom sklearn.multioutput import MultiOutputRegressor\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.preprocessing import StandardScaler\r\nfrom sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error\r\n\r\nimport warnings\r\nwarnings.filterwarnings('ignore')\r\n\r\n# ========== Step 1: Read Excel Data ==========\r\nfile_path = r\"C:\\Users\\Asad\\Downloads\\Expanded Analysis of Rafts (1).xlsx\"\r\ndf = pd.read_excel(file_path)\r\ndf.columns = df.columns.str.strip()  # Clean column names\r\n# === Step 2: Select and Engineer Features ===\r\ndf['Load_per_Column'] = df['Total Axial load on Column (kN)'] / df['Number of  Columns']\r\ndf['Raft_Load_Ratio'] = df['Total Axial load on Column (kN)'] / df['Area Of Raft (m^2)']\r\ndf['Column_Density'] = df['Number of  Columns'] / df['Area Of Raft (m^2)']\r\ndf['Strength_to_Load_Ratio'] = df[\"Compressive strength of Concrete Fc' (Mpa)\"] / df['Maximum Axial Load on Column in kN']\r\n\r\nfeatures = [\r\n    'Column Area (m^2)', 'Area Of Raft (m^2)', 'Total Axial load on Column (kN)',\r\n    \"Compressive strength of Concrete Fc' (Mpa)\", 'Concrete Unit Weight (kN/m^3)',\r\n    'Subgrade Modulus kN/m/m^2', 'Thickness of Raft (mm)',\r\n    'Load_per_Column', 'Raft_Load_Ratio', 'Column_Density', 'Strength_to_Load_Ratio'\r\n]\r\nX = df[features]\r\ny = df[['Settlement (mm)', 'Punching Shear Value', 'Bearing Pressure (kPa)']]\r\n\r\n# === Step 3: Train Model ===\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\r\nscaler = StandardScaler()\r\nX_train_scaled = scaler.fit_transform(X_train)\r\nX_test_scaled = scaler.transform(X_test)\r\nmodel = MultiOutputRegressor(ExtraTreesRegressor(n_estimators=100, max_depth=10, random_state=42))\r\nmodel.fit(X_train_scaled, y_train)\r\n\r\n# === Step 4: Predict from Dynamo Input (IN[0]) ===\r\ntry:\r\n    inputs = IN[0]  # List of 9 values from List.Create\r\n\r\n    # Unpack inputs\r\n    num_cols = float(inputs[0])\r\n    raft_area = float(inputs[1])\r\n    col_area = float(inputs[2])\r\n    fc = float(inputs[3])\r\n    unit_weight = float(inputs[4])\r\n    subgrade = float(inputs[5])\r\n    max_axial = float(inputs[6])\r\n    total_axial = float(inputs[7])\r\n    thickness = float(inputs[8])\r\n\r\n    # Compute engineered features\r\n    load_per_col = total_axial / num_cols\r\n    raft_load_ratio = total_axial / raft_area\r\n    col_density = num_cols / raft_area\r\n    strength_to_load = fc / max_axial\r\n\r\n    input_vector = [\r\n        col_area, raft_area, total_axial, fc, unit_weight,\r\n        subgrade, thickness, load_per_col, raft_load_ratio,\r\n        col_density, strength_to_load\r\n    ]\r\n\r\n    input_scaled = scaler.transform([input_vector])\r\n    prediction = model.predict(input_scaled)[0]\r\n\r\n    labels = ['Settlement (mm)', 'Punching Shear', 'Bearing Pressure (kPa)']\r\n    prediction_dict = dict(zip(labels, map(float, prediction)))\r\n\r\n    # === Step 5: Add R² Metrics for Reference ===\r\n    test_pred = model.predict(X_test_scaled)\r\n    r2_scores = [r2_score(y_test.iloc[:, i], test_pred[:, i]) for i in range(3)]\r\n    metrics = dict(zip(labels, [round(r2, 4) for r2 in r2_scores]))\r\n\r\n    OUT = [prediction_dict, metrics]\r\n\r\nexcept Exception as e:\r\n    OUT = [f\"Prediction Error: {str(e)}\", {}]\r\n\r\n  \r\n\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "f7965f511e6f4c75838089e703cc97a5",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "10bbf4e32a6347ca856c53d41b156d54",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2831061f192845788e5f7ccc34460655",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# --- Inputs ---\r\nprediction_dict = IN[0]  # This should be the dictionary: {\"Settlement (mm)\": ..., ...}\r\nallowable_settlement = IN[1]  # e.g. 50\r\nsubgrade_modulus = IN[2]      # e.g. 25000\r\n\r\n# --- Extract predictions from dictionary ---\r\ntry:\r\n    settlement = prediction_dict[\"Settlement (mm)\"]\r\n    punching = prediction_dict[\"Punching Shear\"]\r\n    bearing_pressure = prediction_dict[\"Bearing Pressure (kPa)\"]\r\n\r\n    # --- Bearing capacity formula ---\r\n    bearing_capacity = (subgrade_modulus * settlement) / 2  # in kPa\r\n\r\n    # --- Design checks ---\r\n    errors = []\r\n\r\n    if settlement > allowable_settlement:\r\n        errors.append(\"❌ Settlement exceeded: {:.2f} mm > {:.2f} mm\".format(settlement, allowable_settlement))\r\n\r\n    if punching > 1.0:\r\n        errors.append(\"❌ Punching shear exceeded: {:.2f} > 1.0\".format(punching))\r\n\r\n    if bearing_pressure > bearing_capacity:\r\n        errors.append(\"❌ Bearing pressure exceeded: {:.2f} kPa > Capacity {:.2f} kPa\".format(\r\n            bearing_pressure, bearing_capacity))\r\n\r\n    # --- Output result ---\r\n    if errors:\r\n        OUT = [\"❌ Design Failed\", errors]\r\n    else:\r\n        OUT = [\"✅ Design Passed\", prediction_dict]\r\n\r\nexcept Exception as e:\r\n    OUT = [\"❌ Error processing input:\", str(e)]\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "7951c50715cc42baa50951adf6ce07b4",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "cf0657c8d2c549a19d8addfeee3bbd79",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "baf9e0639381453e9c0278b69337207e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "40ff863118d64f7fbb6ed46b8b007d01",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4870179933241518b929760d5c3213f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NumberType": "Double",
      "MaximumValue": 100.0,
      "MinimumValue": 0.0,
      "StepValue": 0.1,
      "Id": "14c7a2a11fad4fa88ee2d8c48761273a",
      "NodeType": "NumberInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9304d63dfd7749df94c38d819a01147f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Produces numeric values",
      "InputValue": 25.0
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5f5edd51ac8c4c058390dc447ccbbdc9",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "85a31f52e9cb4844ad35102341e94b91",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3bb0ee296d1d443488cfc603e3681cde",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6bc7a68dc45a4fff8a544fd92138605a",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "47555ffd0fb84ec7b966d23de77eb572",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0dc56840e3f24bb6ac7edde3d5a8c448",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "5;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d969cb8e75794c27ba2dab9e3b49b582",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e907de6a4b004b3497df18c0ac32fbe3",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63e45c9a062b486489620d8403d4408e",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3cfde9461048480b9c4b606abfd21ce2",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "f71fca1a34df49fea2f30c43a1eaef64",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "945d9e1b7a824a42a87b4f7e648ab237",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "0;"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 358.0,
      "WatchHeight": 296.0,
      "Id": "27f8cdf978544ad5b1e7eca610375d74",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "d610311539c24f228d3d5e01e8acdff4",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "574b0a82b7bf44ca97f1d8fc4f15b73d",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\n# For Dynamo CPython3 or pyRevit\r\nimport clr\r\nimport sys\r\n\r\n# Add Revit API references\r\nclr.AddReference(\"RevitServices\")\r\nfrom RevitServices.Persistence import DocumentManager\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nfrom Autodesk.Revit.DB import *\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\ndef get_top_face_area(column):\r\n    options = Options()\r\n    options.ComputeReferences = True\r\n    options.IncludeNonVisibleObjects = False\r\n\r\n    geometry_element = column.get_Geometry(options)\r\n\r\n    for geo in geometry_element:\r\n        if isinstance(geo, Solid) and geo.Faces.Size > 0:\r\n            top_face = None\r\n            max_z = -1e6\r\n\r\n            for face in geo.Faces:\r\n                try:\r\n                    # Get mid-UV and normal\r\n                    bbox = face.GetBoundingBox()\r\n                    u = (bbox.Min.U + bbox.Max.U) / 2\r\n                    v = (bbox.Min.V + bbox.Max.V) / 2\r\n                    uv = UV(u, v)\r\n                    normal = face.ComputeNormal(uv)\r\n\r\n                    # Check if normal points upward (Z axis)\r\n                    if normal.Z > 0.99:\r\n                        # Triangulate and get average Z\r\n                        mesh = face.Triangulate()\r\n                        z_sum = 0\r\n                        for i in range(mesh.NumTriangles):\r\n                            tri = mesh.get_Triangle(i)\r\n                            for j in range(3):\r\n                                z_sum += tri.get_Vertex(j).Z\r\n                        avg_z = z_sum / (mesh.NumTriangles * 3)\r\n\r\n                        if avg_z > max_z:\r\n                            max_z = avg_z\r\n                            top_face = face\r\n                except:\r\n                    continue\r\n\r\n            if top_face:\r\n                return top_face.Area\r\n            else:\r\n                return None\r\n    return None\r\n\r\n# Collect all structural columns\r\ncollector = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\n\r\nareas = []\r\n\r\nfor column in collector:\r\n    area = get_top_face_area(column)\r\n    areas.append(area*0.092903)\r\n\r\n# Output in Dynamo (use OUT)\r\nOUT = areas\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "2ca3f0475deb46759ccc614f649a67ac",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "978479ce754040e2b970bcceb988bff7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc3b12428d2f403e80be6a931f4d04ce",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2abb89f942bf43b18c286b25bc695c4a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1c5e7b84e9914d6f87db72429b524a72",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0fad80d48b9f47cab839bb5c2e337976",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and Revit Libraries\r\nimport clr\r\nimport math\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\n\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Get the current Revit document\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\ndef get_top_face_area(floor):\r\n    options = Options()\r\n    options.ComputeReferences = True\r\n    options.IncludeNonVisibleObjects = False\r\n\r\n    geometry_element = floor.get_Geometry(options)\r\n\r\n    for geo in geometry_element:\r\n        if isinstance(geo, Solid) and geo.Faces.Size > 0:\r\n            top_face = None\r\n            max_z = -1e6\r\n\r\n            for face in geo.Faces:\r\n                try:\r\n                    # Get UV midpoint and compute normal\r\n                    bbox = face.GetBoundingBox()\r\n                    u = (bbox.Min.U + bbox.Max.U) / 2\r\n                    v = (bbox.Min.V + bbox.Max.V) / 2\r\n                    uv = UV(u, v)\r\n                    normal = face.ComputeNormal(uv)\r\n\r\n                    # Check for upward facing face\r\n                    if normal.Z > 0.99:\r\n                        # Compute average Z height of triangulated mesh\r\n                        mesh = face.Triangulate()\r\n                        z_sum = 0\r\n                        for i in range(mesh.NumTriangles):\r\n                            tri = mesh.get_Triangle(i)\r\n                            for j in range(3):\r\n                                z_sum += tri.get_Vertex(j).Z\r\n                        avg_z = z_sum / (mesh.NumTriangles * 3)\r\n\r\n                        if avg_z > max_z:\r\n                            max_z = avg_z\r\n                            top_face = face\r\n                except:\r\n                    continue\r\n\r\n            if top_face:\r\n                return top_face.Area\r\n            else:\r\n                return None\r\n    return None\r\n\r\n# Collect all floor elements\r\nfloors = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\n\r\n# Get the first floor element only\r\nfirst_floor = floors[0] if len(floors) > 0 else None\r\n\r\nif first_floor:\r\n    area_ft2 = get_top_face_area(first_floor)  # Area in ft²\r\n    if area_ft2:\r\n        length_ft = math.sqrt(area_ft2)        # Convert area to length in ft\r\n        length_mm = length_ft * 304.8           # Convert ft to mm\r\n        rounded_mm = round(length_mm, 2)        # Round to 2 decimal places\r\n        OUT = rounded_mm\r\n    else:\r\n        OUT = \"No top face area found\"\r\nelse:\r\n    OUT = \"No floors found\"\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "23d89face8a7425ca6115bd8e7d8a8a0",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "cb3e55cf3f3d4b7685c42c6996c456b9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b7f8bbaab06448f95d8b054ee7cb3b4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 28.0,
      "WatchHeight": 38.0,
      "Id": "36b166de000745c980450a3edffefc18",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "1e2812ac048349d98be7bb2137f7e9ed",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2da40fda3ced491589f5b73768930a0c",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "7630fbff5391437992bab996d6557d40",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "16759de44e024047b160aff697bb54ed",
          "Name": "list",
          "Description": "List of comparable items to take the maximum value from\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5c4a1502af048debab5f220a789b1e4",
          "Name": "item",
          "Description": "Maximum item from the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.MaximumItem@var[]",
      "Replication": "Auto",
      "Description": "Returns the maximum value from a list.\n\nList.MaximumItem (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 42.0,
      "WatchHeight": 38.0,
      "Id": "146f970c08a140f3853c0f83f45e82b8",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "bf2797d2b5f649798dc216b4f778453d",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2abd3f6a045049e886146fd522588c2e",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 50.0,
      "WatchHeight": 38.0,
      "Id": "68fc1642b00d46c2b8bfc8a36eb90188",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "170512d07cef4495b5e5e422822903eb",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64da946aed824771b4590ffde3d533e6",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e603ea920031489b8af3119b0691696c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "697ecc4da0d84752ae77c6a17a4ff8f6",
          "Name": "number",
          "Description": "Number to round\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1075d6a44f324229a49959dd317fc635",
          "Name": "digits",
          "Description": "Number of fractional digits in the return value\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "034b484b159a4f93b46b7dbe79f61dc1",
          "Name": "number",
          "Description": "The number nearest to value that contains a number of fractional digits equal to digits",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.Math.Round@double,int",
      "Replication": "Auto",
      "Description": "Rounds a number to a specified number of fractional digits.\n\nMath.Round (number: double, digits: int): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "8a920c33f7294d74a4a48af8a61a8c2d",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9f1c2495868e4c87bdd109bfa6b49974",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "3;"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 58.0,
      "WatchHeight": 38.0,
      "Id": "739dac5036b246109005f3d73f351023",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "26881fc82a414b178e289cc313fa9284",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6607a1506a5498a803a7cdfb4b0c8f8",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 58.0,
      "WatchHeight": 38.0,
      "Id": "256d517018c54072ae46dca9308c295e",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "c8d329a1f693475b9d1b705cd2c19af8",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15ed8b08e6474858a454b9ccb25a0b7b",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 58.0,
      "WatchHeight": 38.0,
      "Id": "ed29c0b4af454935829b62600d12a5e6",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "c7a2504ff0054bb396c09108ecd2daab",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "597d55e288054c5697baf8447a45053f",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 325.0,
      "WatchHeight": 298.0,
      "Id": "d7d27ec3082646f4948c44a3f3cbed02",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "0612ab15f1f648c193972e2ddd2160cf",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ccd50b129f34f1fb63c724b12428875",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 281.0,
      "WatchHeight": 308.0,
      "Id": "ad3c47037efe49ca861481900fe51f8e",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "235125419a274ffaad4d5a96818ca498",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de56a3cffde24b149963bc396f9d3c51",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 336.0,
      "WatchHeight": 254.0,
      "Id": "2e24e1ec3fa14b9ead755af19c094800",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "ff3ee3dc00ea4c41a8c3618677816c4a",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cae0646709c34efda50e6f8370d8242b",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and Revit Libraries\r\nimport clr\r\nimport math\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\n\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Get the current Revit document\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\ndef get_top_face_area(floor):\r\n    options = Options()\r\n    options.ComputeReferences = True\r\n    options.IncludeNonVisibleObjects = False\r\n\r\n    geometry_element = floor.get_Geometry(options)\r\n\r\n    for geo in geometry_element:\r\n        if isinstance(geo, Solid) and geo.Faces.Size > 0:\r\n            top_face = None\r\n            max_z = -1e6\r\n\r\n            for face in geo.Faces:\r\n                try:\r\n                    # Get UV midpoint and compute normal\r\n                    bbox = face.GetBoundingBox()\r\n                    u = (bbox.Min.U + bbox.Max.U) / 2\r\n                    v = (bbox.Min.V + bbox.Max.V) / 2\r\n                    uv = UV(u, v)\r\n                    normal = face.ComputeNormal(uv)\r\n\r\n                    # Check for upward facing face\r\n                    if normal.Z > 0.99:\r\n                        # Compute average Z height of triangulated mesh\r\n                        mesh = face.Triangulate()\r\n                        z_sum = 0\r\n                        for i in range(mesh.NumTriangles):\r\n                            tri = mesh.get_Triangle(i)\r\n                            for j in range(3):\r\n                                z_sum += tri.get_Vertex(j).Z\r\n                        avg_z = z_sum / (mesh.NumTriangles * 3)\r\n\r\n                        if avg_z > max_z:\r\n                            max_z = avg_z\r\n                            top_face = face\r\n                except:\r\n                    continue\r\n\r\n            if top_face:\r\n                return top_face.Area\r\n            else:\r\n                return None\r\n    return None\r\n\r\n# Collect all floor elements\r\nfloors = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\n\r\n# Get the first floor element only\r\nfirst_floor = floors[0] if len(floors) > 0 else None\r\n\r\nif first_floor:\r\n    area_ft2 = get_top_face_area(first_floor)  # Area in ft²\r\n    if area_ft2:\r\n        length_ft = math.sqrt(area_ft2)        # Convert area to length in ft\r\n        length_mm = length_ft * 304.8           # Convert ft to mm\r\n        rounded_mm = round(length_mm/1000)*1000     # Round to 2 decimal places\r\n        OUT = rounded_mm\r\n    else:\r\n        OUT = \"No top face area found\"\r\nelse:\r\n    OUT = \"No floors found\"\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "163d15135bc849439e969f3dd3badcb4",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "577483922a5747f28f1c954590cabf48",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "14fe0362c8b74b55a2f39fc9ad0ddfe7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "95e4b75ff46a42caad935ec375210e98",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "58b074e34f6a409fbcd2d8e45927cc46",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a46c902cfb204430b558fb9a76a2ec55",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3f5d8a8287748ef871c2cde6a4cc397",
          "Name": "number",
          "Description": "Result of the y input subtracted from the x input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "-@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Returns subtraction of x minus y\n\n- (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "b2004b27093146e68addd9b2b941ce54",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "5f5b503bafa54ce98b55e120c33c8d62",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "198724994f1d42e0bf259a2a874352a9",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b177242521ac4b8694577c298910e222",
          "Name": "number",
          "Description": "Result of the y input subtracted from the x input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "-@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Returns subtraction of x minus y\n\n- (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "3d0d5e6b85d14ea08a30716e9fc528b2",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "91307c982f1e4a45a4667cf50f622f3f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "50;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "629899705d45498c8f7e601ab8b9d0f3",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2d04cde2c0ea45f4b630d20c4981f946",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "75;"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 568.0,
      "WatchHeight": 220.0,
      "Id": "afd3f6b2767546519b8c96061698f1d9",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "a4721398cdf94c50a7d2cbb88b18c650",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47b4eb51cf9a49ff9ab120f5ae1f2d8b",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a3f3a004540f41ea9dc1e6054ea97e23",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "208d3bde65ae46b7ae8a9bc2442f4e32",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "2;"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "adfb07fb89644f4b8e37a1efb3924d00",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dbb2844ca4964d458a6fdb1b434a04e4",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": true
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "968bfbab77d3463bbc708f336bed9bba",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9bb3d14f6e7742d6b3060f96bb106c5f",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": false
    },
    {
      "ConcreteType": "StructuralDesign.Rebar.RevitRebarBarType, StructuralDesign.DropDownNodes",
      "SelectedIndex": -1,
      "SelectedString": "",
      "Id": "586bbd4930ec4b7d9deab4c3b04cb3f7",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a68eab8640114e5b9932ca8d61a82ebc",
          "Name": "RebarBarType",
          "Description": "The selected RebarBarType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select Rebar Bar Type"
    },
    {
      "ConcreteType": "StructuralDesign.Rebar.RevitRebarShape, StructuralDesign.DropDownNodes",
      "SelectedIndex": -1,
      "SelectedString": "",
      "Id": "aea842615e1349e5bfb59ff9df1f3b56",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2e9cb2dae5e94e60a04b9f384c0a0c88",
          "Name": "RebarShape",
          "Description": "The selected RebarShape",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select Rebar Shape"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "7130b68233974000a0dc2d0183e19fdd",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9697833891244890a5c1fad9474b129a",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": false
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "d4d72a8123804b7a9b802074360eb518",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e3bafa67ec554701ac5726e60fe60f59",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "2;"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "31b09fbdb90143cebeeee60ff5630b0e",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b5e2a868bb1144e18940e1d0a7d19a8d",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": true
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "a538f86da0c54923a50dd86706858ea9",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d1e908121b2448c3a099e179852464aa",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": false
    },
    {
      "ConcreteType": "StructuralDesign.Rebar.RevitRebarBarType, StructuralDesign.DropDownNodes",
      "SelectedIndex": -1,
      "SelectedString": "",
      "Id": "4f48dab6949f455dafba3927a61a9e61",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "76527cc9e6f943d6bd94ffd6eb56d60c",
          "Name": "RebarBarType",
          "Description": "The selected RebarBarType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select Rebar Bar Type"
    },
    {
      "ConcreteType": "StructuralDesign.Rebar.RevitRebarShape, StructuralDesign.DropDownNodes",
      "SelectedIndex": -1,
      "SelectedString": "",
      "Id": "004d30743de64e1f9c0d509422584830",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1e26cd3fac2545a480a4010addb03cf5",
          "Name": "RebarShape",
          "Description": "The selected RebarShape",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select Rebar Shape"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "eba6160409954eb196ca4aefa1b7a503",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a679a86f73424f01ac3e55c6dd9377a7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "2;"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "0caf1f35a0ee4e0b9c44997a9fbb9899",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f1e600c0e27e4df38b69cc731fff47a0",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": true
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "Id": "429dca4e5dbe4dd38f9d87f54e07bd3b",
      "NodeType": "BooleanInputNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "510a8a8b7591446f8bd1b153d800a998",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Enables selection between True and False",
      "InputValue": false
    },
    {
      "ConcreteType": "StructuralDesign.Rebar.RevitRebarBarType, StructuralDesign.DropDownNodes",
      "SelectedIndex": -1,
      "SelectedString": "",
      "Id": "e10e8195a48d4fa49230bb53f4a970c5",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fdc5db940e0b4f658fa4a06e7a77ed27",
          "Name": "RebarBarType",
          "Description": "The selected RebarBarType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select Rebar Bar Type"
    },
    {
      "ConcreteType": "StructuralDesign.Rebar.RevitRebarShape, StructuralDesign.DropDownNodes",
      "SelectedIndex": -1,
      "SelectedString": "",
      "Id": "674139e305b94063b532a49e80337360",
      "NodeType": "ExtensionNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0096e004f7dd4404bc186d0e550d26e6",
          "Name": "RebarShape",
          "Description": "The selected RebarShape",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select Rebar Shape"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "d1882d38b66b459f9a672e170f2b5b61",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ece33f92490a4726abff04459638bd72",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "2;"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and Revit Libraries\r\nimport clr\r\nimport math\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\n\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Get the current Revit document\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\ndef get_top_face_area(floor):\r\n    options = Options()\r\n    options.ComputeReferences = True\r\n    options.IncludeNonVisibleObjects = False\r\n\r\n    geometry_element = floor.get_Geometry(options)\r\n\r\n    for geo in geometry_element:\r\n        if isinstance(geo, Solid) and geo.Faces.Size > 0:\r\n            top_face = None\r\n            max_z = -1e6\r\n\r\n            for face in geo.Faces:\r\n                try:\r\n                    # Get UV midpoint and compute normal\r\n                    bbox = face.GetBoundingBox()\r\n                    u = (bbox.Min.U + bbox.Max.U) / 2\r\n                    v = (bbox.Min.V + bbox.Max.V) / 2\r\n                    uv = UV(u, v)\r\n                    normal = face.ComputeNormal(uv)\r\n\r\n                    # Check for upward facing face\r\n                    if normal.Z > 0.99:\r\n                        # Compute average Z height of triangulated mesh\r\n                        mesh = face.Triangulate()\r\n                        z_sum = 0\r\n                        for i in range(mesh.NumTriangles):\r\n                            tri = mesh.get_Triangle(i)\r\n                            for j in range(3):\r\n                                z_sum += tri.get_Vertex(j).Z\r\n                        avg_z = z_sum / (mesh.NumTriangles * 3)\r\n\r\n                        if avg_z > max_z:\r\n                            max_z = avg_z\r\n                            top_face = face\r\n                except:\r\n                    continue\r\n\r\n            if top_face:\r\n                return top_face.Area\r\n            else:\r\n                return None\r\n    return None\r\n\r\n# Collect all floor elements\r\nfloors = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\n\r\n# Get the first floor element only\r\nfirst_floor = floors[0] if len(floors) > 0 else None\r\n\r\nif first_floor:\r\n    area_ft2 = get_top_face_area(first_floor)  # Area in ft²\r\n    if area_ft2:\r\n        length_ft = math.sqrt(area_ft2)        # Convert area to length in ft\r\n        length_mm = length_ft * 304.8           # Convert ft to mm\r\n        rounded_mm = round(length_mm/1000)*1000     # Round to 2 decimal places\r\n        OUT = rounded_mm\r\n    else:\r\n        OUT = \"No top face area found\"\r\nelse:\r\n    OUT = \"No floors found\"\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "9d222b3892ea4acc9040f9c100aa3cfd",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "7859e938a4514350995797c859b08813",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a4d60af6f6f4c97a6f33935cbc1e491",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "Code": "# Load the Python Standard and Revit Libraries\r\nimport clr\r\nimport math\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\n\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom Autodesk.Revit.DB import *\r\n\r\n# Get the current Revit document\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\ndef get_top_face_area(floor):\r\n    options = Options()\r\n    options.ComputeReferences = True\r\n    options.IncludeNonVisibleObjects = False\r\n\r\n    geometry_element = floor.get_Geometry(options)\r\n\r\n    for geo in geometry_element:\r\n        if isinstance(geo, Solid) and geo.Faces.Size > 0:\r\n            top_face = None\r\n            max_z = -1e6\r\n\r\n            for face in geo.Faces:\r\n                try:\r\n                    # Get UV midpoint and compute normal\r\n                    bbox = face.GetBoundingBox()\r\n                    u = (bbox.Min.U + bbox.Max.U) / 2\r\n                    v = (bbox.Min.V + bbox.Max.V) / 2\r\n                    uv = UV(u, v)\r\n                    normal = face.ComputeNormal(uv)\r\n\r\n                    # Check for upward facing face\r\n                    if normal.Z > 0.99:\r\n                        # Compute average Z height of triangulated mesh\r\n                        mesh = face.Triangulate()\r\n                        z_sum = 0\r\n                        for i in range(mesh.NumTriangles):\r\n                            tri = mesh.get_Triangle(i)\r\n                            for j in range(3):\r\n                                z_sum += tri.get_Vertex(j).Z\r\n                        avg_z = z_sum / (mesh.NumTriangles * 3)\r\n\r\n                        if avg_z > max_z:\r\n                            max_z = avg_z\r\n                            top_face = face\r\n                except:\r\n                    continue\r\n\r\n            if top_face:\r\n                return top_face.Area\r\n            else:\r\n                return None\r\n    return None\r\n\r\n# Collect all floor elements\r\nfloors = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\n\r\n# Get the first floor element only\r\nfirst_floor = floors[0] if len(floors) > 0 else None\r\n\r\nif first_floor:\r\n    area_ft2 = get_top_face_area(first_floor)  # Area in ft²\r\n    if area_ft2:\r\n        length_ft = math.sqrt(area_ft2)        # Convert area to length in ft\r\n        length_mm = length_ft * 304.8           # Convert ft to mm\r\n        rounded_mm = round(length_mm/1000)*1000     # Round to 2 decimal places\r\n        OUT = rounded_mm\r\n    else:\r\n        OUT = \"No top face area found\"\r\nelse:\r\n    OUT = \"No floors found\"\r\n",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "535d85320cd7478aab60096b7664fc93",
      "NodeType": "PythonScriptNode",
      "Inputs": [
        {
          "Id": "6552844fe8004910855a7d4cbc84768e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c9a97c5281c4c2cbfff48c13f94e557",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d8e363b748454809b8fbfe09fcb015b0",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c623dbdd337d4b68b723c39e2eff9ce1",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "07a7a023843149cfb7809c272700824b",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ea973eb0d754cdbb36a338843603656",
          "Name": "number",
          "Description": "Result of the y input subtracted from the x input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "-@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Returns subtraction of x minus y\n\n- (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "61830ea2e29640788c40755c7280a237",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d857d89639de452dabd32e2b64af3dd1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "75;"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5e336919795e48f9b088afe1c123621c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e2ba225b9d824938a9355d678f05d663",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f0a7d88bb314782928f059b1f216165",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5efb8a714a94c8fa73a4dc804ae18da",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a05d767fc484e339e253a9e11ff733f",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2d3cdbf8c409457f963261188e051b71",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fe8102bace964fc2bac6c6bd0c0ab485",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3fc3e04f3c65460394685643d7947848",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9bf12a491f9d4f538606bc0c14753749",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "e5680bfa22234ed6b9009186e348b027",
      "End": "c954543d21ad40e6a7ad61da2462a0c6",
      "Id": "c79af673acc8496aae86c590ba33b28f",
      "IsHidden": "False"
    },
    {
      "Start": "14021a38331c4569a32ce8782f82a659",
      "End": "d863b3867fe54c269ca240a1bf50633f",
      "Id": "bf0208bd09494663bbc5c3617b519f5b",
      "IsHidden": "False"
    },
    {
      "Start": "61e82d9a5245462e9f15ef6bafcbedcd",
      "End": "ea0989bb59ac4d32ab8962b431761d22",
      "Id": "a4e259f8d28548b5a8525c0d187bb026",
      "IsHidden": "False"
    },
    {
      "Start": "bea73750f16747ab8f88c3fd612879ac",
      "End": "b591535c50a9406f9b76f41ec0f4e2c6",
      "Id": "103978630c044045b493cac7b9f47265",
      "IsHidden": "False"
    },
    {
      "Start": "57d4cab2a7cb4d2489acc04d7e48db98",
      "End": "3f5967ed2b3e4531831ddf67a2f31296",
      "Id": "9d29b51d5977462eb53c41c3733ce506",
      "IsHidden": "False"
    },
    {
      "Start": "862f5bdd289348228e74480debb7946c",
      "End": "5e1b0cf80cb243298736acfc59f130ab",
      "Id": "a8f476616f4b448ab54225832b1de42e",
      "IsHidden": "False"
    },
    {
      "Start": "efaee3f30156411fb0369a5b5150a181",
      "End": "dc97dd79e4bd4f198380dc2ac2814cf2",
      "Id": "f0e26715ddfe4f11aa1e5a2bc38f06cc",
      "IsHidden": "False"
    },
    {
      "Start": "efaee3f30156411fb0369a5b5150a181",
      "End": "235125419a274ffaad4d5a96818ca498",
      "Id": "545ba12374664b76a275f1deabb49f15",
      "IsHidden": "False"
    },
    {
      "Start": "efaee3f30156411fb0369a5b5150a181",
      "End": "9b50553969494126b592dcd6015732bf",
      "Id": "920c44f1b43049e690854a367f6c68f6",
      "IsHidden": "False"
    },
    {
      "Start": "3fa9172224244c91a3b7923a6df4de31",
      "End": "acf88ad543924f46bf740bf8abd06a95",
      "Id": "f1aea55d03f34e7daa7961a0b8f7e3f9",
      "IsHidden": "False"
    },
    {
      "Start": "0a3168ce597f4bcab5e3f5b542cbb950",
      "End": "0afb0e50d326441f9d400918d30ff089",
      "Id": "104d7bef95a8454a97086f8a23e004cf",
      "IsHidden": "False"
    },
    {
      "Start": "c3d677ed8dc84068a714cd3826de3262",
      "End": "fdecf2b4979e484d84f65a7e89c29133",
      "Id": "d27c87129d8246da97a038b2285541b7",
      "IsHidden": "False"
    },
    {
      "Start": "d74f5b0ca8c64af190a805acd9ba4dcc",
      "End": "b8940cb879c041d49a465ab1fb3c18e5",
      "Id": "0fb5a66eb1214020a1db9b6a14079740",
      "IsHidden": "False"
    },
    {
      "Start": "d74f5b0ca8c64af190a805acd9ba4dcc",
      "End": "8f7aa61764934e8eac61a6d066163f7c",
      "Id": "7ce6cd9d7e4743158caa4ab31c75c30e",
      "IsHidden": "False"
    },
    {
      "Start": "d74f5b0ca8c64af190a805acd9ba4dcc",
      "End": "cf3ebe6e7bcb4860b0dfcc2cd7305e9a",
      "Id": "3d1e4f5691fb4f9aa4740c96fc0a1de7",
      "IsHidden": "False"
    },
    {
      "Start": "d74f5b0ca8c64af190a805acd9ba4dcc",
      "End": "2d33ca78791d4ad19198ca219ff7af49",
      "Id": "3cb9a7784e144b2b873740052591812e",
      "IsHidden": "False"
    },
    {
      "Start": "d74f5b0ca8c64af190a805acd9ba4dcc",
      "End": "fe8102bace964fc2bac6c6bd0c0ab485",
      "Id": "70636e75217c4eafad7a6e8a6e7965f5",
      "IsHidden": "False"
    },
    {
      "Start": "57e00c353feb4308b50a7c233a53865a",
      "End": "4886fffca781428cb8283d43a9c8fd4b",
      "Id": "06ce6e8d57b5405985838685aadd9807",
      "IsHidden": "False"
    },
    {
      "Start": "5e59ba66bd904bac83443754508e0a5e",
      "End": "29c168cdf04f4c26bc87a1bb2e4136f8",
      "Id": "1cf75e6996354beea94ca98f34604f32",
      "IsHidden": "False"
    },
    {
      "Start": "f46e550b4dfe4c6398e35e1dbe6db3a2",
      "End": "6206765c13604208aa7cb4950b97ab2e",
      "Id": "2e5a8bf5592d443cbeeb8155ce19ac01",
      "IsHidden": "False"
    },
    {
      "Start": "6799c19d0e6b42a69f3b6943712f8ac6",
      "End": "91b3d8dca6d24dc191bb7115a64aea09",
      "Id": "18f46480443e4175b49e45411e7e0ee6",
      "IsHidden": "False"
    },
    {
      "Start": "d62ed987c1fd45fe8e0ec696102709c0",
      "End": "9a7aefa6953e43e58c7344792363fd56",
      "Id": "7ac7450d396b45b6a11b449cd0eee63b",
      "IsHidden": "False"
    },
    {
      "Start": "074e02e8b8664702a30aad87eef564b7",
      "End": "1a424945c39c40548209106531887ecf",
      "Id": "568729bfabee4c1b9e8813d0b93cd5ea",
      "IsHidden": "False"
    },
    {
      "Start": "2fc854304be54e69a17d061bba516849",
      "End": "ea246c6ced2f4ca3825579a2c3ab25c3",
      "Id": "560aebbe570449938d3558b5046a0e7f",
      "IsHidden": "False"
    },
    {
      "Start": "2fc854304be54e69a17d061bba516849",
      "End": "fa23531a54e249698fcd18048b4ae007",
      "Id": "0a9a6d093ea94b55a99f4eb17e6e66e9",
      "IsHidden": "False"
    },
    {
      "Start": "2fc854304be54e69a17d061bba516849",
      "End": "9621fd5bb077462fa3655dc09eff6b53",
      "Id": "ddf3cdf42ece422d8eb168d2aeae36a8",
      "IsHidden": "False"
    },
    {
      "Start": "e5e7d258564a493f9989d3270e1cbf15",
      "End": "6f32838945cb4be6bc1bce111b886300",
      "Id": "fada645afacb4e32a4ee03d1955effbf",
      "IsHidden": "False"
    },
    {
      "Start": "e5e7d258564a493f9989d3270e1cbf15",
      "End": "e2ba225b9d824938a9355d678f05d663",
      "Id": "653d14146682491cb8e23462fd6b8685",
      "IsHidden": "False"
    },
    {
      "Start": "12131df5bf3d45a4a73f15a67aeb64bc",
      "End": "21bbb42218b24a6f8a10927373e4ecd2",
      "Id": "d88e57f278624cfa9be31e8e2c11d062",
      "IsHidden": "False"
    },
    {
      "Start": "12131df5bf3d45a4a73f15a67aeb64bc",
      "End": "c5efb8a714a94c8fa73a4dc804ae18da",
      "Id": "7024e57381f54493a2b2eee00ca7aec6",
      "IsHidden": "False"
    },
    {
      "Start": "1335df5696a2498987b88d0f665658ec",
      "End": "b16c8947f787413780ab6435163be4df",
      "Id": "ed6d7730faed46f5a84d315a6ef057ae",
      "IsHidden": "False"
    },
    {
      "Start": "1335df5696a2498987b88d0f665658ec",
      "End": "2f0a7d88bb314782928f059b1f216165",
      "Id": "4a50f6e94362480591cebfeed8b63995",
      "IsHidden": "False"
    },
    {
      "Start": "05e9a281e2cf47858cff16853d6fec65",
      "End": "969dcfd575a1434085611c821dbddd49",
      "Id": "595e9d49cac0408bb6ad2f22697f73aa",
      "IsHidden": "False"
    },
    {
      "Start": "05e9a281e2cf47858cff16853d6fec65",
      "End": "1942cd7fefca43edb5a5f520eb90c737",
      "Id": "5d2b7c0d5031423b8cb9f9c064850b1c",
      "IsHidden": "False"
    },
    {
      "Start": "a0d80062235e4dbf95f3bd20e0a2c71f",
      "End": "e2f4ad05ac83483a8a8be32b138af5c4",
      "Id": "1ad085ab95c2457cb0a6eb592013069a",
      "IsHidden": "False"
    },
    {
      "Start": "7a3d9185c9474de19a5755141e2fbbdd",
      "End": "ee3d1fd9b44f4b1a92070dc7749dd9f2",
      "Id": "2efb2ef207374036af5abd3595e9ce5d",
      "IsHidden": "False"
    },
    {
      "Start": "9e432be006cd45d89abdffbc950a2b1b",
      "End": "8d944acba6aa4664a43acfeb0537f6b0",
      "Id": "840801c52f1f407c99cc9f8a9470b9de",
      "IsHidden": "False"
    },
    {
      "Start": "9e432be006cd45d89abdffbc950a2b1b",
      "End": "184b58314faa495ea280c89975d0c0cf",
      "Id": "92efb9b152604d699efdeaea05cd37cc",
      "IsHidden": "False"
    },
    {
      "Start": "a6eb34d20488408ba9d7e83cf2ad5939",
      "End": "0eec8b3aecb64006961951fbdf8aab14",
      "Id": "f4eb766511394d2db6fff99ae0b299f8",
      "IsHidden": "False"
    },
    {
      "Start": "a6eb34d20488408ba9d7e83cf2ad5939",
      "End": "fb06f60bee134fffb75ae23c28f3f932",
      "Id": "1d61c5d6cdeb4411930c4c001d7ec84f",
      "IsHidden": "False"
    },
    {
      "Start": "9487f6ae67b249c7b6011d9f53340684",
      "End": "e4bb1517308649c98decdf850ec28dd3",
      "Id": "157459ac192942508233526923fbdf0d",
      "IsHidden": "False"
    },
    {
      "Start": "9487f6ae67b249c7b6011d9f53340684",
      "End": "6bae62699dd344baad01159443512ea2",
      "Id": "19af3f9f9aae41fd838969aff52f8972",
      "IsHidden": "False"
    },
    {
      "Start": "3cdc882ce1444ce3968eaeac17da8146",
      "End": "bb8e13831b174f9b8340b37a6c29863a",
      "Id": "67b534c49b4941818fc4cbf6b616cd8d",
      "IsHidden": "False"
    },
    {
      "Start": "3cdc882ce1444ce3968eaeac17da8146",
      "End": "7e09eaf38aec49d8b431fba05e9535e4",
      "Id": "4e5c38f31b154f78bdd3cfda25b02f27",
      "IsHidden": "False"
    },
    {
      "Start": "a675d854d2064dfb85152e7e8d32427d",
      "End": "f94200339fb943609d5f17626486bc6b",
      "Id": "b22bb03d871942369922fc6071e3aeac",
      "IsHidden": "False"
    },
    {
      "Start": "a675d854d2064dfb85152e7e8d32427d",
      "End": "e73bfd718ac7427f8aca102ead0fcb53",
      "Id": "31556d93602b44909c14f6ef2e5cccd6",
      "IsHidden": "False"
    },
    {
      "Start": "a675d854d2064dfb85152e7e8d32427d",
      "End": "a2f78df757744c7da71bdc4255be99ef",
      "Id": "223c8eacc6474981b81583a49662d731",
      "IsHidden": "False"
    },
    {
      "Start": "a675d854d2064dfb85152e7e8d32427d",
      "End": "42b97157701647b08faa395e1b88d7f7",
      "Id": "7ca08bb5e7024c3eaf6951ebb1c9ea3e",
      "IsHidden": "False"
    },
    {
      "Start": "e1a00c9a378344b48489e62f8636a148",
      "End": "681006059d7d49e0809f5fefe2ef5918",
      "Id": "d9800510663d427a9710b4aa30bc9258",
      "IsHidden": "False"
    },
    {
      "Start": "e1a00c9a378344b48489e62f8636a148",
      "End": "c1351208606646e096af09453b0c2c1e",
      "Id": "b7979bc7f637470e9eb17570dc812767",
      "IsHidden": "False"
    },
    {
      "Start": "c9b0a7f6d8914985bd9879c6ce252d36",
      "End": "539818020a5548bd9f38154916b9e153",
      "Id": "0ffb4994902446be9e7686ca69afc7fa",
      "IsHidden": "False"
    },
    {
      "Start": "c9b0a7f6d8914985bd9879c6ce252d36",
      "End": "0f4580086b3b42b1b4d037072d4bd9d0",
      "Id": "7979bf90b7a146c3a3841713bdc628fc",
      "IsHidden": "False"
    },
    {
      "Start": "f174a236ea1342bb80caf07d9fc7c733",
      "End": "e1387455c79a47728d00abc9ce0c8937",
      "Id": "b06c1ccb698c4495a1ef6f71303d5f3a",
      "IsHidden": "False"
    },
    {
      "Start": "f174a236ea1342bb80caf07d9fc7c733",
      "End": "c673bb49d2a545ef8239ddb1a1168c2f",
      "Id": "413116a7b20a4b58b5611e6cd87e4847",
      "IsHidden": "False"
    },
    {
      "Start": "98069edb00bc4bcba9e4649e4d4ea897",
      "End": "8232ab0b449b4d94bf5dc3607f73ba7c",
      "Id": "b2ae649e528e42668e4005994b41cfb0",
      "IsHidden": "False"
    },
    {
      "Start": "98069edb00bc4bcba9e4649e4d4ea897",
      "End": "a1fa9cef89634f838becdb79ba4d3531",
      "Id": "63114c4abb494cdebf5da497fe591de1",
      "IsHidden": "False"
    },
    {
      "Start": "564c6f59d231443aa91fa0eeffb55ee6",
      "End": "7fe3515ac56846b19a4755e041ff25fd",
      "Id": "277be81c39e64184b14f04c2fff4c603",
      "IsHidden": "False"
    },
    {
      "Start": "564c6f59d231443aa91fa0eeffb55ee6",
      "End": "a4721398cdf94c50a7d2cbb88b18c650",
      "Id": "0a1155f282dc44b9b42a29a5aa1c1916",
      "IsHidden": "False"
    },
    {
      "Start": "7d40c2decda24124b7e72eff4b5252f3",
      "End": "585843c516d8471ea1a006c2b5723d09",
      "Id": "c62cb1e13ba44697be7c2def2b7c6d68",
      "IsHidden": "False"
    },
    {
      "Start": "a333121b1170437caa192d5074828106",
      "End": "57ab655e03054b749c9f7729f51e2a70",
      "Id": "9b920271a6de48e9aac7ace17d70cd2e",
      "IsHidden": "False"
    },
    {
      "Start": "f57cdb474f8c440f888acd1c33e8c42f",
      "End": "38d88f91ad574824bf92771d1f3ef4ef",
      "Id": "bdfde359a61c45bc9b4565d4bd8ee9a1",
      "IsHidden": "False"
    },
    {
      "Start": "a10e71268cfd470aa608f4c462f4216b",
      "End": "b80a0be53f774028a00c2ef1c0222aba",
      "Id": "bd199c550e17452587e299c55e66ca21",
      "IsHidden": "False"
    },
    {
      "Start": "a10e71268cfd470aa608f4c462f4216b",
      "End": "3fc3e04f3c65460394685643d7947848",
      "Id": "4a550c523dad49e381baa4b4e82c773d",
      "IsHidden": "False"
    },
    {
      "Start": "10062dffd4234d9d9f0cffc129712371",
      "End": "82fd75ba0ce549d7a59bc71304c75279",
      "Id": "98aade6bab7c4aed8ab09a8f880de191",
      "IsHidden": "False"
    },
    {
      "Start": "8081a3068fdd4f20b252977c015adf1f",
      "End": "bbef876ddc024d18a3a97571d7207073",
      "Id": "2ff926c347e94737af5c092f8c912511",
      "IsHidden": "False"
    },
    {
      "Start": "8081a3068fdd4f20b252977c015adf1f",
      "End": "1e2812ac048349d98be7bb2137f7e9ed",
      "Id": "d8d1761e41234b6f93d4453f6d22122a",
      "IsHidden": "False"
    },
    {
      "Start": "14064d60a9414803ad8964039109e42f",
      "End": "16759de44e024047b160aff697bb54ed",
      "Id": "98eefba53e7a4ed7a09ad8ce93d619eb",
      "IsHidden": "True"
    },
    {
      "Start": "952c4668fd5244938b38acf22a34f98a",
      "End": "64056f9a517c4706b3e0bdadbcab79f3",
      "Id": "469274fe0d844dcb946c568002699631",
      "IsHidden": "True"
    },
    {
      "Start": "952c4668fd5244938b38acf22a34f98a",
      "End": "bf2797d2b5f649798dc216b4f778453d",
      "Id": "1c35f4e355d0486ab6299ff466a94b00",
      "IsHidden": "True"
    },
    {
      "Start": "e0cf235a79db456488875859afa63ad3",
      "End": "5f4012edfcf146b7a65c93b4b4342e63",
      "Id": "98b2b384fc4347d3998579389d1a249c",
      "IsHidden": "False"
    },
    {
      "Start": "1db3352bc36a4c2aa464200ed445bee4",
      "End": "47f93769d1004955a83f55067089a721",
      "Id": "fca72cf9b06b4757b8aaa2c410beac51",
      "IsHidden": "False"
    },
    {
      "Start": "1db3352bc36a4c2aa464200ed445bee4",
      "End": "e19bb2da9a2f4bd290181f5d69c8d1e9",
      "Id": "ce31723c2cfe4c288be95c2316108ff7",
      "IsHidden": "False"
    },
    {
      "Start": "fed8532261d04eda87de0477d2b426a4",
      "End": "af40a2d7a0c44d27881798ee891f4b3b",
      "Id": "27775b781398464f8954d9c1b563362c",
      "IsHidden": "False"
    },
    {
      "Start": "fed8532261d04eda87de0477d2b426a4",
      "End": "c8d329a1f693475b9d1b705cd2c19af8",
      "Id": "8e417dc7e84644308dd7ac6168c8edff",
      "IsHidden": "False"
    },
    {
      "Start": "4f18a9443e064ef6b5dded2589d86a6c",
      "End": "77a09456ea994342af6a667fb71f40cb",
      "Id": "f969cf70a1ad46469ab253d243df44b3",
      "IsHidden": "False"
    },
    {
      "Start": "4f18a9443e064ef6b5dded2589d86a6c",
      "End": "c7a2504ff0054bb396c09108ecd2daab",
      "Id": "d4bde267d931445a8362960ea7144c19",
      "IsHidden": "False"
    },
    {
      "Start": "fe57936e3c1b4f358bfbf4ffc05dabcb",
      "End": "82b80e17cfd8422886b4ea19264dc15b",
      "Id": "98de6672460746af9d9d844ae0d4b91e",
      "IsHidden": "False"
    },
    {
      "Start": "5e98ef1529674c0dbc44045c976f6338",
      "End": "be1de53a34ef407d98a0b372c9c15003",
      "Id": "621c4bcb46c7460987a96372c45f8f3b",
      "IsHidden": "False"
    },
    {
      "Start": "39e40c8d67ba47f5ab690da1e5e33b0e",
      "End": "efa2b3d9d64c4924b18ceaf1bd1909b0",
      "Id": "b893c77a65084d9bac90a951cb484153",
      "IsHidden": "False"
    },
    {
      "Start": "39e40c8d67ba47f5ab690da1e5e33b0e",
      "End": "0612ab15f1f648c193972e2ddd2160cf",
      "Id": "2383992aac114bd58ce467c1c549ead8",
      "IsHidden": "False"
    },
    {
      "Start": "ce0d4de8909a45ac852aa39ee3b9bbcb",
      "End": "10bbf4e32a6347ca856c53d41b156d54",
      "Id": "ffd2cf5d11334a6ab9a8e0f0dff7fa47",
      "IsHidden": "False"
    },
    {
      "Start": "ce0d4de8909a45ac852aa39ee3b9bbcb",
      "End": "85a31f52e9cb4844ad35102341e94b91",
      "Id": "9232c943581d4601a646d28675c95457",
      "IsHidden": "False"
    },
    {
      "Start": "0cd50b4ec1f74d62a6eac4117de7f2d1",
      "End": "3d8e775fde314fc09cc7fc8e4b0caeba",
      "Id": "3a3e5c4789b04e27b0ddcfd0d070fe8d",
      "IsHidden": "False"
    },
    {
      "Start": "2831061f192845788e5f7ccc34460655",
      "End": "e907de6a4b004b3497df18c0ac32fbe3",
      "Id": "ac70d652d0394db9af6e954c00b81897",
      "IsHidden": "False"
    },
    {
      "Start": "2831061f192845788e5f7ccc34460655",
      "End": "ff3ee3dc00ea4c41a8c3618677816c4a",
      "Id": "bba3297fdde04f3b8a74d835475e3cc5",
      "IsHidden": "False"
    },
    {
      "Start": "d4870179933241518b929760d5c3213f",
      "End": "d610311539c24f228d3d5e01e8acdff4",
      "Id": "0547d82ac83b4f95bf51bd122bddd72e",
      "IsHidden": "False"
    },
    {
      "Start": "9304d63dfd7749df94c38d819a01147f",
      "End": "baf9e0639381453e9c0278b69337207e",
      "Id": "b01beb6372e145ccb820475f97ff14bc",
      "IsHidden": "False"
    },
    {
      "Start": "6bc7a68dc45a4fff8a544fd92138605a",
      "End": "40ff863118d64f7fbb6ed46b8b007d01",
      "Id": "5c3ec33ec2e645d08bd3ac6c49dd03d4",
      "IsHidden": "False"
    },
    {
      "Start": "0dc56840e3f24bb6ac7edde3d5a8c448",
      "End": "3bb0ee296d1d443488cfc603e3681cde",
      "Id": "2ed02f71c9e84686887f1fea3ba36f66",
      "IsHidden": "False"
    },
    {
      "Start": "3cfde9461048480b9c4b606abfd21ce2",
      "End": "cf0657c8d2c549a19d8addfeee3bbd79",
      "Id": "1c139802fa3247dfabf35a3174327b55",
      "IsHidden": "False"
    },
    {
      "Start": "945d9e1b7a824a42a87b4f7e648ab237",
      "End": "63e45c9a062b486489620d8403d4408e",
      "Id": "b28862bb48f5450cb88844ad4bb3a090",
      "IsHidden": "False"
    },
    {
      "Start": "bc3b12428d2f403e80be6a931f4d04ce",
      "End": "1c5e7b84e9914d6f87db72429b524a72",
      "Id": "d81eef2e92c04f189cdaaef188f3030e",
      "IsHidden": "False"
    },
    {
      "Start": "0fad80d48b9f47cab839bb5c2e337976",
      "End": "697ecc4da0d84752ae77c6a17a4ff8f6",
      "Id": "69a6669a7b33435185503faeaa224603",
      "IsHidden": "False"
    },
    {
      "Start": "1b7f8bbaab06448f95d8b054ee7cb3b4",
      "End": "9aa68a35c37a449db664d1acab7efd14",
      "Id": "4062d043f99b442e88e86c61af0ce552",
      "IsHidden": "False"
    },
    {
      "Start": "c5c4a1502af048debab5f220a789b1e4",
      "End": "f717b5496b0b4a31b50f4a249034db53",
      "Id": "e0f41e8e63444e4ab5f4a780f4652893",
      "IsHidden": "False"
    },
    {
      "Start": "c5c4a1502af048debab5f220a789b1e4",
      "End": "170512d07cef4495b5e5e422822903eb",
      "Id": "8063d3981c294c2381ca043e9ff975da",
      "IsHidden": "False"
    },
    {
      "Start": "034b484b159a4f93b46b7dbe79f61dc1",
      "End": "e53d4f053676439d8871fe93a3d2ec8f",
      "Id": "6a272a3d0e104af990ef0838b972eb2d",
      "IsHidden": "False"
    },
    {
      "Start": "034b484b159a4f93b46b7dbe79f61dc1",
      "End": "26881fc82a414b178e289cc313fa9284",
      "Id": "c6dd2447bfc74c89b7f636d8bb274acf",
      "IsHidden": "False"
    },
    {
      "Start": "9f1c2495868e4c87bdd109bfa6b49974",
      "End": "1075d6a44f324229a49959dd317fc635",
      "Id": "805273c30fd643b0bddec267cc4e6913",
      "IsHidden": "False"
    },
    {
      "Start": "14fe0362c8b74b55a2f39fc9ad0ddfe7",
      "End": "58b074e34f6a409fbcd2d8e45927cc46",
      "Id": "bb06278ed8b84147996a817771a761bc",
      "IsHidden": "False"
    },
    {
      "Start": "14fe0362c8b74b55a2f39fc9ad0ddfe7",
      "End": "9fd06025adbb42948aa3fde155c09247",
      "Id": "0e91fa6f3c6c431ba2f8c07cdeb10c78",
      "IsHidden": "False"
    },
    {
      "Start": "14fe0362c8b74b55a2f39fc9ad0ddfe7",
      "End": "295ca1d248c448fe96f2a8b569f6a1da",
      "Id": "87d35df5d31d4371b9ae8e4adee4d446",
      "IsHidden": "False"
    },
    {
      "Start": "14fe0362c8b74b55a2f39fc9ad0ddfe7",
      "End": "d258e1895b8749cba11b7b9834dd744e",
      "Id": "fb81350e572a4173b21f75bd00128726",
      "IsHidden": "False"
    },
    {
      "Start": "14fe0362c8b74b55a2f39fc9ad0ddfe7",
      "End": "32fe727245924dbca8d397bbb8043506",
      "Id": "92a18d6c46bc41a9b91abaed6621762d",
      "IsHidden": "False"
    },
    {
      "Start": "f3f5d8a8287748ef871c2cde6a4cc397",
      "End": "308b0bda95c04676ad5aab8fe136ffcf",
      "Id": "c2c89dcfe32f4b09b95406b0ffc30c10",
      "IsHidden": "False"
    },
    {
      "Start": "f3f5d8a8287748ef871c2cde6a4cc397",
      "End": "cf9211b5b4a04cefaaed9cb2c4a56269",
      "Id": "54e51dc64e9d43188a22c6bbc82a29e8",
      "IsHidden": "False"
    },
    {
      "Start": "b177242521ac4b8694577c298910e222",
      "End": "7287ff4bc7d047979d44f75978519bbd",
      "Id": "f190eec4d71243c2a9917a66c19297ce",
      "IsHidden": "False"
    },
    {
      "Start": "91307c982f1e4a45a4667cf50f622f3f",
      "End": "a46c902cfb204430b558fb9a76a2ec55",
      "Id": "25cf495865fb45fc8542d840c79a5c16",
      "IsHidden": "False"
    },
    {
      "Start": "2d04cde2c0ea45f4b630d20c4981f946",
      "End": "198724994f1d42e0bf259a2a874352a9",
      "Id": "09e1a4cb9985441697e7dbce0e412235",
      "IsHidden": "False"
    },
    {
      "Start": "208d3bde65ae46b7ae8a9bc2442f4e32",
      "End": "45f1187a742045b5b0ab8ed3357323b7",
      "Id": "469a36b3879a47ec917ed7af044e2a2f",
      "IsHidden": "False"
    },
    {
      "Start": "dbb2844ca4964d458a6fdb1b434a04e4",
      "End": "b89ea0112c7649bda8abf36101187239",
      "Id": "e61d3e312e68427190bb897d21b82c23",
      "IsHidden": "False"
    },
    {
      "Start": "9bb3d14f6e7742d6b3060f96bb106c5f",
      "End": "e50c63002f554c738bab804fe0a44cb5",
      "Id": "6e47c91c206544829cfbebfd710343a7",
      "IsHidden": "False"
    },
    {
      "Start": "a68eab8640114e5b9932ca8d61a82ebc",
      "End": "c7bb28212d884e4baa3b2b25a5d28c43",
      "Id": "414496300b76446ab5376f21c6ecb0ad",
      "IsHidden": "False"
    },
    {
      "Start": "2e9cb2dae5e94e60a04b9f384c0a0c88",
      "End": "22346c62657e4a17ad2f79fa43026051",
      "Id": "7a620686e1e04e36876bda0a40d6cc2a",
      "IsHidden": "False"
    },
    {
      "Start": "e3bafa67ec554701ac5726e60fe60f59",
      "End": "70d41da77511488e9170bf845b5918a1",
      "Id": "155f7f7e06894101851ea26e222840a4",
      "IsHidden": "False"
    },
    {
      "Start": "b5e2a868bb1144e18940e1d0a7d19a8d",
      "End": "ad1a1ec36aac490882a1201d7b156e7d",
      "Id": "5b81426d426f46ba963cf72652449dca",
      "IsHidden": "False"
    },
    {
      "Start": "d1e908121b2448c3a099e179852464aa",
      "End": "795ef558ca464af38bf8216d015481c1",
      "Id": "09752f7a49c348d7b3515de84f344997",
      "IsHidden": "False"
    },
    {
      "Start": "76527cc9e6f943d6bd94ffd6eb56d60c",
      "End": "07e59ef8c46346ee9a0dd759662e20c6",
      "Id": "61038f42201248d9a47a22a3e0cbab19",
      "IsHidden": "False"
    },
    {
      "Start": "1e26cd3fac2545a480a4010addb03cf5",
      "End": "9a27c03b7c8046e6a19a75b8006450c1",
      "Id": "51c62129324a4b40a206df4781fca5ce",
      "IsHidden": "False"
    },
    {
      "Start": "a679a86f73424f01ac3e55c6dd9377a7",
      "End": "3824c43349644514a3dd5c61e642b6d3",
      "Id": "1e4d4057b9c740c58f318234c80b20b8",
      "IsHidden": "False"
    },
    {
      "Start": "f1e600c0e27e4df38b69cc731fff47a0",
      "End": "587518f7f07948e5a7f15d86aa83c1a5",
      "Id": "3bd268ae81534199b75a1c7f570c50f0",
      "IsHidden": "False"
    },
    {
      "Start": "510a8a8b7591446f8bd1b153d800a998",
      "End": "b298e751614f41b8a775d6a564e400fb",
      "Id": "1ffe00555c4e4a278a6fcfc5ea2b3ca8",
      "IsHidden": "False"
    },
    {
      "Start": "fdc5db940e0b4f658fa4a06e7a77ed27",
      "End": "3ca2783cdd404b34831fb570549c9d72",
      "Id": "1435917e7d384c858074c28362f907c2",
      "IsHidden": "False"
    },
    {
      "Start": "0096e004f7dd4404bc186d0e550d26e6",
      "End": "d2c6a4ccc0b643dba561b9dac62e88d6",
      "Id": "b7efdb869aaf46ac8e35528b387a412d",
      "IsHidden": "False"
    },
    {
      "Start": "ece33f92490a4726abff04459638bd72",
      "End": "4e1ae40138124598916f3caa08c79295",
      "Id": "6dc63405836a4ce38e6c47f2315ca46d",
      "IsHidden": "False"
    },
    {
      "Start": "7a4d60af6f6f4c97a6f33935cbc1e491",
      "End": "5f5b503bafa54ce98b55e120c33c8d62",
      "Id": "18745cf38f944405bdd4a35a209b5a44",
      "IsHidden": "False"
    },
    {
      "Start": "0c9a97c5281c4c2cbfff48c13f94e557",
      "End": "c623dbdd337d4b68b723c39e2eff9ce1",
      "Id": "29528e9f071b45299a8e841940849a09",
      "IsHidden": "False"
    },
    {
      "Start": "8ea973eb0d754cdbb36a338843603656",
      "End": "aeaba43526d8481880f4e57103c701ba",
      "Id": "613b8743fbff413bac6a1ead6d3f17c3",
      "IsHidden": "False"
    },
    {
      "Start": "d857d89639de452dabd32e2b64af3dd1",
      "End": "07a7a023843149cfb7809c272700824b",
      "Id": "fb1db285afa64f56b9c77ebc20d0a357",
      "IsHidden": "False"
    },
    {
      "Start": "8a05d767fc484e339e253a9e11ff733f",
      "End": "7300a634e6404687a5158fe15b72e414",
      "Id": "619d84014cba425a9eba4af35887516b",
      "IsHidden": "False"
    },
    {
      "Start": "9bf12a491f9d4f538606bc0c14753749",
      "End": "75f41198c3bc473b9833c0d9e6694441",
      "Id": "5f0dcd543368468898557075fbe54cc7",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "Structural Design",
      "Version": "2025.3.16",
      "ReferenceType": "Package",
      "Nodes": [
        "6542bcc811b04f7e9108b8de397480fc",
        "cdd111caa8c44a6badd4fec077ab7b92",
        "90375a535d2a4d34837a5b6b44123011",
        "c07b0223b1ac477dadb5c5a9fcf5cc99",
        "406a8712df3b4319a070298b60769e56",
        "8f5e94002e8f4548a87e6c41c4c82331",
        "586bbd4930ec4b7d9deab4c3b04cb3f7",
        "aea842615e1349e5bfb59ff9df1f3b56",
        "4f48dab6949f455dafba3927a61a9e61",
        "004d30743de64e1f9c0d509422584830",
        "e10e8195a48d4fa49230bb53f4a970c5",
        "674139e305b94063b532a49e80337360"
      ]
    }
  ],
  "EnableLegacyPolyCurveBehavior": true,
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "3.2",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "8.2",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 10000.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "3.2.2.5494",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "c8c6c956cc754f8fbc8c6e2cee491d63",
        "Name": "Dia @ Bottom X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1894.3118411113824,
        "Y": -1441.241287450335
      },
      {
        "Id": "3e3592fd26aa4c5f94756aa3dd20fca3",
        "Name": "Total Axial Load (kN)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3094.838544009067,
        "Y": -1811.5915584842483
      },
      {
        "Id": "23e55cd9a0d248bca64415f88a059b4b",
        "Name": "Max Axial Load on Col (kN)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3107.405149633459,
        "Y": -1668.932795720762
      },
      {
        "Id": "ce919731abe14145978e4161056d1962",
        "Name": "Dia @ Top X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1678.21695621805,
        "Y": -1358.3710913691623
      },
      {
        "Id": "85f15b34120b4f4dac33facfbbf292dd",
        "Name": "Dia @ Bottom Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1814.108351773869,
        "Y": -1227.364471138414
      },
      {
        "Id": "acdfea610fe343fbb7f024891376baaf",
        "Name": "Dia @ Top Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1560.3258890741033,
        "Y": -1169.4632122715564
      },
      {
        "Id": "7b99dbbebb4c41c7a2f29337c976e182",
        "Name": "Values",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -988.660353508739,
        "Y": -2393.1144922716962
      },
      {
        "Id": "ec4a1046ab46434dac76b89fa036f90c",
        "Name": "Headers",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1008.3263925652943,
        "Y": -2706.601445906007
      },
      {
        "Id": "eeb6edeeea0d4e21a6039fe9095a4e82",
        "Name": "List Create",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -434.3783568612489,
        "Y": -2438.7796135092817
      },
      {
        "Id": "a5e9d450ea7648db848d513b9445c60e",
        "Name": "Subgarde Modulus (kN/m/m2)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3435.796977328876,
        "Y": -1725.9750504515737
      },
      {
        "Id": "a126f6d629184c58862e8b0ab4a9760c",
        "Name": "Output Predictions of Raft Design",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 943.7351606736793,
        "Y": -3139.1469641966605
      },
      {
        "Id": "1376aa59d49b4fb28a142f360c39023f",
        "Name": "Bottom X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1769.4587655352616,
        "Y": -3082.8519514572035
      },
      {
        "Id": "0a4f5ef8c2364852bef2254be897de4b",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1510.6907328155548,
        "Y": -2977.5969189232446
      },
      {
        "Id": "6542bcc811b04f7e9108b8de397480fc",
        "Name": "PathReinforcement.CreateByCurveAndShapeCode",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4028.9370176381226,
        "Y": -2641.3032678593104
      },
      {
        "Id": "fbb55514fcf94202afbb6a24bacf22de",
        "Name": "Face (Top=True,Bottom=False)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3086.545427575309,
        "Y": -3531.0828300457724
      },
      {
        "Id": "cdd111caa8c44a6badd4fec077ab7b92",
        "Name": "RebarBarType(check from Preferred Dia from Input Parameters) ",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3048.192265500763,
        "Y": -3273.479213499929
      },
      {
        "Id": "90375a535d2a4d34837a5b6b44123011",
        "Name": "RebarShape",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2697.40166937509,
        "Y": -3052.291755026764
      },
      {
        "Id": "a11d9f57678a450e82641703a68e609e",
        "Name": "Flip",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3057.9334199082305,
        "Y": -3409.6788907302234
      },
      {
        "Id": "5b0c7c0c7d824e0893435301ba21797c",
        "Name": "Host Element Raft",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2651.887630310909,
        "Y": -822.5741770239524
      },
      {
        "Id": "9d7690590e8a4d659453ab89c5e4f952",
        "Name": "3D Geometryof Raft",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2376.258617965992,
        "Y": -995.4867691439517
      },
      {
        "Id": "fc72e8ed38c9438f98ad671195ffba67",
        "Name": "Boolean",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2436.224014198556,
        "Y": -587.632278538495
      },
      {
        "Id": "f1ac3f16309044739269bc62879f758f",
        "Name": "Category Type",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2066.644176795111,
        "Y": -876.7942581080843
      },
      {
        "Id": "7054b37a485442ac804b72bf101c29a3",
        "Name": "Floor Types",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3740.497497671959,
        "Y": -2764.624486042867
      },
      {
        "Id": "de98fab12e704a1ca51be38055263691",
        "Name": "Level.ByElevation",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2113.6715457849596,
        "Y": -669.1896914449626
      },
      {
        "Id": "3af53ae0d71d41698fdf53e78c4eb18e",
        "Name": "Elevation",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1732.07154578496,
        "Y": -583.3896914449629
      },
      {
        "Id": "93bb51cea7414438a198cbf69e181a19",
        "Name": "Point.ByCoordinates",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1301.0517160257286,
        "Y": -1550.535997655858
      },
      {
        "Id": "765a3f3943364bda82119a611be86085",
        "Name": "Point.ByCoordinates",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1297.4268956824903,
        "Y": -2035.689270386963
      },
      {
        "Id": "c9197414973f40ef9f7ec7ff11c59511",
        "Name": "Point.ByCoordinates",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1303.9929145496535,
        "Y": -1788.5257635542075
      },
      {
        "Id": "f26aca188e8b44cf8c2b952d4f5eddce",
        "Name": "Point.ByCoordinates",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1300.1976396742984,
        "Y": -1308.219036997526
      },
      {
        "Id": "5362d2c17ee240d9a8985e9204551288",
        "Name": "Elevation(mm)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 830.2266015328883,
        "Y": -1621.422117354527
      },
      {
        "Id": "9219af837a7b4eed9099295657c71c54",
        "Name": "Line.ByStartPointEndPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1757.3642567178472,
        "Y": -1991.3387354442884
      },
      {
        "Id": "2fcc254d9c5f485fb89f5573fabd93e2",
        "Name": "Line.ByStartPointEndPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1822.5286740317101,
        "Y": -1325.7801856939354
      },
      {
        "Id": "cf25ea87dbfa4275b8591db1c9dbc94b",
        "Name": "Line.ByStartPointEndPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1770.107886232759,
        "Y": -1520.3114494255024
      },
      {
        "Id": "810de09ef6724226b9a3edf9df5c9d23",
        "Name": "Line.ByStartPointEndPoint",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1757.6972694405144,
        "Y": -1768.7915334269073
      },
      {
        "Id": "d7638c77456e466ca0d9c8af32a72b57",
        "Name": "Outline Curve",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2145.8218758164157,
        "Y": -1810.6521968830584
      },
      {
        "Id": "d49076c72a1c4f2e9b093bd3e5e2fbaf",
        "Name": "Bottom Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1786.0663492495678,
        "Y": -2870.200666093011
      },
      {
        "Id": "c6f4f4e0f8b04bfdb6b1c16d6f65d8c4",
        "Name": "Top Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1789.8046767389424,
        "Y": -2664.357283056866
      },
      {
        "Id": "7d8ac16ea4064d2aabdff51037622673",
        "Name": "Top X",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1748.590064846575,
        "Y": -3301.6511920069916
      },
      {
        "Id": "655486b6490d4ae6bb46a4c6db0a640e",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1520.3214283983916,
        "Y": -3169.826827498192
      },
      {
        "Id": "19ef5594db354958a7fc9320eb208d9e",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1532.2408096845274,
        "Y": -2576.046863518674
      },
      {
        "Id": "e3621b26218a4e059b84f3b810389549",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1530.8595413779522,
        "Y": -2788.253102387174
      },
      {
        "Id": "c07b0223b1ac477dadb5c5a9fcf5cc99",
        "Name": "PathReinforcement.CreateByCurveAndShapeCode",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4057.9585619510317,
        "Y": -3600.1738751778003
      },
      {
        "Id": "b19c802e7ec04bcf82e75edb08fed4ae",
        "Name": "Boolean",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3241.459715015111,
        "Y": -3126.6916659515728
      },
      {
        "Id": "406a8712df3b4319a070298b60769e56",
        "Name": "PathReinforcement.CreateByCurveAndShapeCode",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4359.511053812726,
        "Y": -1597.6094093886072
      },
      {
        "Id": "8f5e94002e8f4548a87e6c41c4c82331",
        "Name": "PathReinforcement.CreateByCurveAndShapeCode",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4339.349839274738,
        "Y": -573.5790160918614
      },
      {
        "Id": "564b52815d8148d7af4e6ab5c1022be8",
        "Name": "No.of Columns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1680.7331229073068,
        "Y": -2971.9823548832546
      },
      {
        "Id": "b94e4a2aa5314e18bc2a1e9876bc176e",
        "Name": "Rounding Area Values",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2485.7081848970874,
        "Y": -2357.8741357726694
      },
      {
        "Id": "6eb30f16a02245c98799047dae01088c",
        "Name": "Thickness of Raft (mm)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3365.189519836722,
        "Y": -2734.549833794224
      },
      {
        "Id": "3353abec2cfc4911b210937f13bfb18b",
        "Name": "Extracting Thickness of Floor",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3740.283877714051,
        "Y": -2615.3790139678094
      },
      {
        "Id": "bac27616c6ce4b319a3ab1fb10b6132d",
        "Name": "Select Any Concrete Element from Model",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3803.385138813769,
        "Y": -1172.1466391127224
      },
      {
        "Id": "e2820c690ba842ed862c47ffba92699c",
        "Name": "Density in KN/m^3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3363.3948366217087,
        "Y": -1206.999199853145
      },
      {
        "Id": "60ef52da9fa24771bcc45f024a9b21d2",
        "Name": "Compressive strength Conc Fc (kPa)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3385.926726630256,
        "Y": -1037.6932282467499
      },
      {
        "Id": "43620575367b4303a22109d113b7456e",
        "Name": "All Elements of Category",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2014.236672645312,
        "Y": -3086.287576596903
      },
      {
        "Id": "155845ed78454bdc81f46f08f39efc89",
        "Name": "Categories",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2370.591388105571,
        "Y": -2815.4828843083287
      },
      {
        "Id": "27c147c1f8534626a0dee3fd9e96c115",
        "Name": "XG BOOST Model Performing Output Predctions",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -331.16559746098164,
        "Y": -2627.847916078303
      },
      {
        "Id": "df9c7fb0e2bc44728b138f78f9b7a783",
        "Name": "Input Parameters for Analysis",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -416.68325250969315,
        "Y": -1555.3885464220768
      },
      {
        "Id": "22bbbcab0689426db812ef23dd7195cc",
        "Name": "Extracting all Parameters for Analysis less Bar Dia",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -884.1686380659917,
        "Y": -1489.9275681712195
      },
      {
        "Id": "f7965f511e6f4c75838089e703cc97a5",
        "Name": "Python Script",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -95.36989488372728,
        "Y": -1478.7584858827856
      },
      {
        "Id": "7951c50715cc42baa50951adf6ce07b4",
        "Name": "Code Complaince Checks to determine Design Feasibility",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -70.04999172990892,
        "Y": -621.3104466516422
      },
      {
        "Id": "14c7a2a11fad4fa88ee2d8c48761273a",
        "Name": "Allowable Bearing Capacity",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -755.4407974489995,
        "Y": -634.8355733423666
      },
      {
        "Id": "5f5edd51ac8c4c058390dc447ccbbdc9",
        "Name": "Modulus of Subgrade",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -312.4183785632831,
        "Y": -616.6015863602222
      },
      {
        "Id": "47555ffd0fb84ec7b966d23de77eb572",
        "Name": "Index",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -560.0295627274172,
        "Y": -486.88236269783306
      },
      {
        "Id": "d969cb8e75794c27ba2dab9e3b49b582",
        "Name": "Extracting Predicted Values of Analysis",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -316.24129524211776,
        "Y": -829.7815166571127
      },
      {
        "Id": "f71fca1a34df49fea2f30c43a1eaef64",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -539.3015165533682,
        "Y": -822.2849570921962
      },
      {
        "Id": "27f8cdf978544ad5b1e7eca610375d74",
        "Name": "Result",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 435.6958107350674,
        "Y": -752.3993959182585
      },
      {
        "Id": "2ca3f0475deb46759ccc614f649a67ac",
        "Name": "Extarcing Area of Columns",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2276.469133671907,
        "Y": -726.0825124336297
      },
      {
        "Id": "2abb89f942bf43b18c286b25bc695c4a",
        "Name": "Extracing One column Area",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1973.0682748675863,
        "Y": -691.5746667640574
      },
      {
        "Id": "23d89face8a7425ca6115bd8e7d8a8a0",
        "Name": "Extracting Area of Slabs (m^2)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2862.1907872701304,
        "Y": -2350.8606898851626
      },
      {
        "Id": "36b166de000745c980450a3edffefc18",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1457.9168454055707,
        "Y": -2932.457204047506
      },
      {
        "Id": "7630fbff5391437992bab996d6557d40",
        "Name": "Areaof Raft (m^2)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -2214.184562258253,
        "Y": -2347.390652605267
      },
      {
        "Id": "146f970c08a140f3853c0f83f45e82b8",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3058.8866791571995,
        "Y": -2778.6147069363474
      },
      {
        "Id": "68fc1642b00d46c2b8bfc8a36eb90188",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1971.097794626206,
        "Y": -2384.422077653064
      },
      {
        "Id": "e603ea920031489b8af3119b0691696c",
        "Name": "Math.Round",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1695.8768256894075,
        "Y": -753.9393078688006
      },
      {
        "Id": "8a920c33f7294d74a4a48af8a61a8c2d",
        "Name": "Decimal Places",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1952.8750781196234,
        "Y": -556.1046021804681
      },
      {
        "Id": "739dac5036b246109005f3d73f351023",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -1460.132998454064,
        "Y": -721.6667161356055
      },
      {
        "Id": "256d517018c54072ae46dca9308c295e",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3054.4753036477123,
        "Y": -1209.949003258847
      },
      {
        "Id": "ed29c0b4af454935829b62600d12a5e6",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -3003.2536349302336,
        "Y": -1047.1336649406267
      },
      {
        "Id": "d7d27ec3082646f4948c44a3f3cbed02",
        "Name": "Output Predictions (Area of Steel, Spacing,No of Bars) in 4 Directions",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -241.0729096148275,
        "Y": -2361.1606640764267
      },
      {
        "Id": "ad3c47037efe49ca861481900fe51f8e",
        "Name": "Input parameters ",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": -762.5051629745897,
        "Y": -2243.31761673457
      },
      {
        "Id": "2e24e1ec3fa14b9ead755af19c094800",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 99.21133683793164,
        "Y": -1546.129150905663
      },
      {
        "Id": "163d15135bc849439e969f3dd3badcb4",
        "Name": "Length of Raft",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 813.7420712962917,
        "Y": -1998.4158738445308
      },
      {
        "Id": "95e4b75ff46a42caad935ec375210e98",
        "Name": "Rebar Length Top",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3564.0359826516033,
        "Y": -3085.5615186701943
      },
      {
        "Id": "b2004b27093146e68addd9b2b941ce54",
        "Name": "Rebar Length Bottom",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3680.054500038558,
        "Y": -93.73637159430473
      },
      {
        "Id": "3d0d5e6b85d14ea08a30716e9fc528b2",
        "Name": "Concerete Cover for Top Reinforcement(mm)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3108.143276108025,
        "Y": -2982.107512381587
      },
      {
        "Id": "629899705d45498c8f7e601ab8b9d0f3",
        "Name": "Concrete Cover for Bottom Reinforment(mm)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3180.2346196117915,
        "Y": 49.23970388068824
      },
      {
        "Id": "afd3f6b2767546519b8c96061698f1d9",
        "Name": "This will be connected to Floor.ByOutlineTypeandLeveL",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2149.996461479808,
        "Y": -1442.2734456890717
      },
      {
        "Id": "a3f3a004540f41ea9dc1e6054ea97e23",
        "Name": "Layout Rule(2=Fixed Spacing)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3046.0201180594277,
        "Y": -3669.2450677880643
      },
      {
        "Id": "adfb07fb89644f4b8e37a1efb3924d00",
        "Name": "Face (Top=True,Bottom=False)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3130.0684920479544,
        "Y": -2560.8813641623483
      },
      {
        "Id": "968bfbab77d3463bbc708f336bed9bba",
        "Name": "Flip",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3101.456484380875,
        "Y": -2439.4774248467993
      },
      {
        "Id": "586bbd4930ec4b7d9deab4c3b04cb3f7",
        "Name": "RebarBarType(check from Preferred Dia from Input Parameters) ",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3091.7153299734073,
        "Y": -2303.2777476165047
      },
      {
        "Id": "aea842615e1349e5bfb59ff9df1f3b56",
        "Name": "RebarShape",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3069.9836181536502,
        "Y": -2039.6857937430932
      },
      {
        "Id": "7130b68233974000a0dc2d0183e19fdd",
        "Name": "Boolean",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3150.9845740229775,
        "Y": -2170.0596385962263
      },
      {
        "Id": "d4d72a8123804b7a9b802074360eb518",
        "Name": "Layout Rule(2=Fixed Spacing)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3089.543182532072,
        "Y": -2699.04360190464
      },
      {
        "Id": "31b09fbdb90143cebeeee60ff5630b0e",
        "Name": "Face (Top=True,Bottom=False)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3301.3391132646875,
        "Y": -638.9715451181933
      },
      {
        "Id": "a538f86da0c54923a50dd86706858ea9",
        "Name": "Flip",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3692.5793034494227,
        "Y": -642.4324878063303
      },
      {
        "Id": "4f48dab6949f455dafba3927a61a9e61",
        "Name": "RebarBarType(check from Preferred Dia from Input Parameters) ",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3321.7052254283763,
        "Y": -503.6912633440529
      },
      {
        "Id": "004d30743de64e1f9c0d509422584830",
        "Name": "RebarShape",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3454.2831379153804,
        "Y": -383.1009119033556
      },
      {
        "Id": "eba6160409954eb196ca4aefa1b7a503",
        "Name": "Layout Rule (2=Fixed Spacing)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3620.0885263307746,
        "Y": -801.3535895094099
      },
      {
        "Id": "0caf1f35a0ee4e0b9c44997a9fbb9899",
        "Name": "Face (Top=True,Bottom=False)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3081.8087386916977,
        "Y": -1640.732558211414
      },
      {
        "Id": "429dca4e5dbe4dd38f9d87f54e07bd3b",
        "Name": "Flip",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3053.19673102462,
        "Y": -1519.328618895865
      },
      {
        "Id": "e10e8195a48d4fa49230bb53f4a970c5",
        "Name": "RebarBarType(check from Preferred Dia from Input Parameters) ",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3043.4555766171525,
        "Y": -1383.1289416655704
      },
      {
        "Id": "674139e305b94063b532a49e80337360",
        "Name": "RebarShape",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3021.7238647973936,
        "Y": -1119.536987792159
      },
      {
        "Id": "d1882d38b66b459f9a672e170f2b5b61",
        "Name": "Layout Rule(2=Fixed Spacing)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3041.283429175817,
        "Y": -1778.894795953705
      },
      {
        "Id": "9d222b3892ea4acc9040f9c100aa3cfd",
        "Name": "Length of Raft",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3360.12420568532,
        "Y": -100.742750866385
      },
      {
        "Id": "535d85320cd7478aab60096b7664fc93",
        "Name": "Length of Raft",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3414.7529151073068,
        "Y": -1266.746327471054
      },
      {
        "Id": "d8e363b748454809b8fbfe09fcb015b0",
        "Name": "Rebar Length Bottom",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3768.9156677154824,
        "Y": -1193.8608777329578
      },
      {
        "Id": "61830ea2e29640788c40755c7280a237",
        "Name": "Concrete Cover for Bottom Reinforment(mm)",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3343.7840386499374,
        "Y": -1139.801151128925
      },
      {
        "Id": "5e336919795e48f9b088afe1c123621c",
        "Name": "Host Element Raft",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3260.139168192977,
        "Y": -854.68578174089
      },
      {
        "Id": "2d3cdbf8c409457f963261188e051b71",
        "Name": "Top Y",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3729.579463287824,
        "Y": -336.0235775588246
      }
    ],
    "Annotations": [
      {
        "Id": "3f3706c1d553492ab22dcf0976c02d0a",
        "Title": "Create Rebars(Top Reinforcement ) Y ",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "fbb55514fcf94202afbb6a24bacf22de",
          "a11d9f57678a450e82641703a68e609e",
          "cdd111caa8c44a6badd4fec077ab7b92",
          "90375a535d2a4d34837a5b6b44123011",
          "b19c802e7ec04bcf82e75edb08fed4ae",
          "a3f3a004540f41ea9dc1e6054ea97e23",
          "95e4b75ff46a42caad935ec375210e98",
          "3d0d5e6b85d14ea08a30716e9fc528b2"
        ],
        "HasNestedGroups": false,
        "Left": 2687.40166937509,
        "Top": -3742.2450677880643,
        "Width": 1089.6343132765132,
        "Height": 892.1375554064771,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -3669.2450677880643,
        "InitialHeight": 832.1375554064771,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "54b7824bbc2d4310a76c846baebdd5d3",
        "Title": "Level",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "de98fab12e704a1ca51be38055263691",
          "3af53ae0d71d41698fdf53e78c4eb18e"
        ],
        "HasNestedGroups": false,
        "Left": 1722.07154578496,
        "Top": -742.1896914449626,
        "Width": 616.5999999999995,
        "Height": 290.7999999999997,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -669.1896914449626,
        "InitialHeight": 230.79999999999973,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ed139739de4b4014926e0361743e6ab1",
        "Title": "Geometry of Poly Curve of Raft",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 74.50279137113876,
        "HeightAdjustment": 10.00482647997012,
        "Nodes": [
          "93bb51cea7414438a198cbf69e181a19",
          "765a3f3943364bda82119a611be86085",
          "c9197414973f40ef9f7ec7ff11c59511",
          "f26aca188e8b44cf8c2b952d4f5eddce",
          "5362d2c17ee240d9a8985e9204551288",
          "9219af837a7b4eed9099295657c71c54",
          "2fcc254d9c5f485fb89f5573fabd93e2",
          "cf25ea87dbfa4275b8591db1c9dbc94b",
          "810de09ef6724226b9a3edf9df5c9d23",
          "d7638c77456e466ca0d9c8af32a72b57",
          "163d15135bc849439e969f3dd3badcb4",
          "afd3f6b2767546519b8c96061698f1d9"
        ],
        "HasNestedGroups": false,
        "Left": 803.7420712962917,
        "Top": -2108.689270386963,
        "Width": 2075.7571815546553,
        "Height": 1007.4750598694071,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -2035.689270386963,
        "InitialHeight": 872.470233389437,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5b50b99b2cd8429a90e83823054564d3",
        "Title": "Top X Rebar",
        "DescriptionText": "HostElement\tThe Revit element (e.g., Floor, Slab, Wall) where the rebar will be hosted\ncurvesPath\tA Curve or list of Curves (typically Lines) that defines the path of the rebar\nlayoutRule\tRebar layout type:\n| flip | Boolean:\ntrue = flip bar direction\nfalse = default orientation |\n| face | Integer representing face (usually 0 = top, 1 = bottom), depending on host |\n| primaryBarType | Revit Rebar Bar Type element for the main bar |\n| primaryBarShape | Rebar shape (e.g., straight, U-shaped, L-shaped), a Revit element |\n| primarySpacing | Spacing between primary bars (in feet) |\n| primaryNumberLines | Number of lines of bars (e.g., 2 layers side-by-side) |\n| primaryBarLength | Length override for the primary bars (optional, in feet) |",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6542bcc811b04f7e9108b8de397480fc"
        ],
        "HasNestedGroups": false,
        "Left": 4018.9370176381226,
        "Top": -2924.3032678593104,
        "Width": 464.0,
        "Height": 865.0,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": -2641.3032678593104,
        "InitialHeight": 145.0,
        "TextblockHeight": 273.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "4d081e134031477484bb0f7e58a9f7ab",
        "Title": "Top Y",
        "DescriptionText": "HostElement\tThe Revit element (e.g., Floor, Slab, Wall) where the rebar will be hosted\ncurvesPath\tA Curve or list of Curves (typically Lines) that defines the path of the rebar\nlayoutRule\tRebar layout type:\n| flip | Boolean:\ntrue = flip bar direction\nfalse = default orientation |\n| face | Integer representing face (usually 0 = top, 1 = bottom), depending on host |\n| primaryBarType | Revit Rebar Bar Type element for the main bar |\n| primaryBarShape | Rebar shape (e.g., straight, U-shaped, L-shaped), a Revit element |\n| primarySpacing | Spacing between primary bars (in feet) |\n| primaryNumberLines | Number of lines of bars (e.g., 2 layers side-by-side) |\n| primaryBarLength | Length override for the primary bars (optional, in feet) |",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c07b0223b1ac477dadb5c5a9fcf5cc99"
        ],
        "HasNestedGroups": false,
        "Left": 4047.9585619510317,
        "Top": -3883.1738751778003,
        "Width": 464.0,
        "Height": 865.0,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": -3600.1738751778003,
        "InitialHeight": 145.0,
        "TextblockHeight": 273.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "631c504e03784a668f2c11eace5ec079",
        "Title": "Bottom Y",
        "DescriptionText": "HostElement\tThe Revit element (e.g., Floor, Slab, Wall) where the rebar will be hosted\ncurvesPath\tA Curve or list of Curves (typically Lines) that defines the path of the rebar\nlayoutRule\tRebar layout type:\n| flip | Boolean:\ntrue = flip bar direction\nfalse = default orientation |\n| face | Integer representing face (usually 0 = top, 1 = bottom), depending on host |\n| primaryBarType | Revit Rebar Bar Type element for the main bar |\n| primaryBarShape | Rebar shape (e.g., straight, U-shaped, L-shaped), a Revit element |\n| primarySpacing | Spacing between primary bars (in feet) |\n| primaryNumberLines | Number of lines of bars (e.g., 2 layers side-by-side) |\n| primaryBarLength | Length override for the primary bars (optional, in feet) |",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8f5e94002e8f4548a87e6c41c4c82331"
        ],
        "HasNestedGroups": false,
        "Left": 4329.349839274738,
        "Top": -856.5790160918614,
        "Width": 464.0,
        "Height": 865.0,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": -573.5790160918614,
        "InitialHeight": 145.0,
        "TextblockHeight": 273.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "af9ee371c8e54ae19f309e8b9d684f36",
        "Title": "Bottom X\r\n",
        "DescriptionText": "HostElement\tThe Revit element (e.g., Floor, Slab, Wall) where the rebar will be hosted\ncurvesPath\tA Curve or list of Curves (typically Lines) that defines the path of the rebar\nlayoutRule\tRebar layout type:\n| flip | Boolean:\ntrue = flip bar direction\nfalse = default orientation |\n| face | Integer representing face (usually 0 = top, 1 = bottom), depending on host |\n| primaryBarType | Revit Rebar Bar Type element for the main bar |\n| primaryBarShape | Rebar shape (e.g., straight, U-shaped, L-shaped), a Revit element |\n| primarySpacing | Spacing between primary bars (in feet) |\n| primaryNumberLines | Number of lines of bars (e.g., 2 layers side-by-side) |\n| primaryBarLength | Length override for the primary bars (optional, in feet) |",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "406a8712df3b4319a070298b60769e56"
        ],
        "HasNestedGroups": false,
        "Left": 4349.511053812726,
        "Top": -1923.6094093886072,
        "Width": 464.0,
        "Height": 908.0,
        "FontSize": 36.0,
        "GroupStyleId": "07655dc1-2d65-4fed-8d6a-37235d3e3a8d",
        "InitialTop": -1597.6094093886072,
        "InitialHeight": 145.0,
        "TextblockHeight": 316.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "9db6a8d9eb834672b6ba33a6eb9b207f",
        "Title": "Extracting No of Columns from Revit Model",
        "DescriptionText": "No of Columns is our first input parameter for prediction of foundation design and analysis",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "564b52815d8148d7af4e6ab5c1022be8",
          "43620575367b4303a22109d113b7456e",
          "155845ed78454bdc81f46f08f39efc89",
          "36b166de000745c980450a3edffefc18"
        ],
        "HasNestedGroups": false,
        "Left": -2380.591388105571,
        "Top": -3159.287576596903,
        "Width": 1050.6745427,
        "Height": 475.8046922885742,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": -3086.287576596903,
        "InitialHeight": 415.8046922885742,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "dabd920c79044703b5fc7f3edc625bd9",
        "Title": "Mannual Input Parameters",
        "DescriptionText": "Only input parameter Entered Manually ",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a5e9d450ea7648db848d513b9445c60e",
          "3e3592fd26aa4c5f94756aa3dd20fca3",
          "23e55cd9a0d248bca64415f88a059b4b"
        ],
        "HasNestedGroups": false,
        "Left": -3445.796977328876,
        "Top": -1884.5915584842483,
        "Width": 621.3918276954169,
        "Height": 347.65876276348627,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": -1811.5915584842483,
        "InitialHeight": 287.65876276348627,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "4949d05f983c49eaae029135ee33e629",
        "Title": "Providing Raft Thickness as Input parameter for Design",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7054b37a485442ac804b72bf101c29a3",
          "6eb30f16a02245c98799047dae01088c",
          "3353abec2cfc4911b210937f13bfb18b",
          "146f970c08a140f3853c0f83f45e82b8"
        ],
        "HasNestedGroups": false,
        "Left": -3750.497497671959,
        "Top": -2894.6147069363474,
        "Width": 820.6108185147596,
        "Height": 411.23569296853793,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": -2778.6147069363474,
        "InitialHeight": 308.23569296853793,
        "TextblockHeight": 106.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "4ac413611128453daad665cacfae7c70",
        "Title": "Extarcting Area of Slabs",
        "DescriptionText": "Area of slabs are used for determining area of rafts our input parameter for machine learning ",
        "IsExpanded": true,
        "WidthAdjustment": 11.091092083099966,
        "HeightAdjustment": 81.65702321911397,
        "Nodes": [
          "b94e4a2aa5314e18bc2a1e9876bc176e",
          "23d89face8a7425ca6115bd8e7d8a8a0",
          "7630fbff5391437992bab996d6557d40",
          "68fc1642b00d46c2b8bfc8a36eb90188"
        ],
        "HasNestedGroups": false,
        "Left": -2872.1907872701304,
        "Top": -2457.422077653064,
        "Width": 1049.1840847270244,
        "Height": 323.6884482669112,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": -2384.422077653064,
        "InitialHeight": 182.03142504779726,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "66699c4c740a4aa7a7b48b9767f97c07",
        "Title": "Extacing Colum Area(m^2)",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 10.841928545576366,
        "HeightAdjustment": 54.9309326511318,
        "Nodes": [
          "2ca3f0475deb46759ccc614f649a67ac",
          "2abb89f942bf43b18c286b25bc695c4a",
          "e603ea920031489b8af3119b0691696c",
          "8a920c33f7294d74a4a48af8a61a8c2d",
          "739dac5036b246109005f3d73f351023"
        ],
        "HasNestedGroups": false,
        "Left": -2286.469133671907,
        "Top": -826.9393078688006,
        "Width": 982.1780637634195,
        "Height": 457.7656383394643,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": -753.9393078688006,
        "InitialHeight": 342.8347056883325,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "69bbe3ba08d042adb7f62d9a71f3382f",
        "Title": "Extracting Compressive Strength and Unit Weight of Concrete from Model",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 73.74094866001678,
        "HeightAdjustment": 65.84741410821641,
        "Nodes": [
          "bac27616c6ce4b319a3ab1fb10b6132d",
          "e2820c690ba842ed862c47ffba92699c",
          "60ef52da9fa24771bcc45f024a9b21d2",
          "256d517018c54072ae46dca9308c295e",
          "ed29c0b4af454935829b62600d12a5e6"
        ],
        "HasNestedGroups": false,
        "Left": -3813.385138813769,
        "Top": -1325.949003258847,
        "Width": 1028.8724525435523,
        "Height": 486.10318912031346,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": -1209.949003258847,
        "InitialHeight": 317.25577501209705,
        "TextblockHeight": 106.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "ad792f62722e4364b866fb0366a2dd5c",
        "Title": "Input Preferred Bar Diameter(mm)",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 81.13721690599164,
        "HeightAdjustment": 25.568117253247237,
        "Nodes": [
          "c8c6c956cc754f8fbc8c6e2cee491d63",
          "ce919731abe14145978e4161056d1962",
          "85f15b34120b4f4dac33facfbbf292dd",
          "acdfea610fe343fbb7f024891376baaf"
        ],
        "HasNestedGroups": false,
        "Left": -1904.3118411113824,
        "Top": -1514.241287450335,
        "Width": 596.1231689432707,
        "Height": 502.3461924320259,
        "FontSize": 36.0,
        "GroupStyleId": "883066aa-1fe2-44a4-9bd1-c3df86bfe9f6",
        "InitialTop": -1441.241287450335,
        "InitialHeight": 416.77807517877864,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "7e7afbbbaca741c4b2595c0c6d278622",
        "Title": "Predicting Design of Raft with XGBoost with Testing Accuracy of 70%",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7b99dbbebb4c41c7a2f29337c976e182",
          "ec4a1046ab46434dac76b89fa036f90c",
          "eeb6edeeea0d4e21a6039fe9095a4e82",
          "27c147c1f8534626a0dee3fd9e96c115",
          "d7d27ec3082646f4948c44a3f3cbed02",
          "ad3c47037efe49ca861481900fe51f8e"
        ],
        "HasNestedGroups": false,
        "Left": -1018.3263925652943,
        "Top": -2779.601445906007,
        "Width": 1379.2534829504668,
        "Height": 942.283829171437,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -2706.601445906007,
        "InitialHeight": 608.283829171437,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "044aba1fd96744068edf4120ffba8d28",
        "Title": "Analysis of Raft Foundation by Predicting Settlement, Punching Shear and Bearing Pressure",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "df9c7fb0e2bc44728b138f78f9b7a783",
          "22bbbcab0689426db812ef23dd7195cc",
          "f7965f511e6f4c75838089e703cc97a5",
          "2e24e1ec3fa14b9ead755af19c094800"
        ],
        "HasNestedGroups": false,
        "Left": -894.1686380659917,
        "Top": -1671.3885464220768,
        "Width": 1416.3799749039233,
        "Height": 477.25939551641386,
        "FontSize": 36.0,
        "GroupStyleId": "4d68be4a-a04d-4945-9dd5-cdf61079d790",
        "InitialTop": -1555.3885464220768,
        "InitialHeight": 221.6300605392912,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "10a19dc0d4ba4ba2866a7c7e269f8fae",
        "Title": "Reviewing Analsysis to Check if the Design is Feasible",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7951c50715cc42baa50951adf6ce07b4",
          "14c7a2a11fad4fa88ee2d8c48761273a",
          "5f5edd51ac8c4c058390dc447ccbbdc9",
          "47555ffd0fb84ec7b966d23de77eb572",
          "d969cb8e75794c27ba2dab9e3b49b582",
          "f71fca1a34df49fea2f30c43a1eaef64",
          "27f8cdf978544ad5b1e7eca610375d74"
        ],
        "HasNestedGroups": false,
        "Left": -765.4407974489995,
        "Top": -902.7815166571127,
        "Width": 1646.136608184067,
        "Height": 547.8991539592796,
        "FontSize": 36.0,
        "GroupStyleId": "bc688959-ce34-4bf5-90f8-6ddd23f80989",
        "InitialTop": -829.7815166571127,
        "InitialHeight": 487.8991539592796,
        "TextblockHeight": 63.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "f613b400bfe7498ab2b79dd3237357a8",
        "Title": "Spacing Of Reinforcment Bars of Raft Foundation",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 28.37784416236991,
        "HeightAdjustment": 57.29447490397229,
        "Nodes": [
          "a126f6d629184c58862e8b0ab4a9760c",
          "1376aa59d49b4fb28a142f360c39023f",
          "0a4f5ef8c2364852bef2254be897de4b",
          "d49076c72a1c4f2e9b093bd3e5e2fbaf",
          "c6f4f4e0f8b04bfdb6b1c16d6f65d8c4",
          "7d8ac16ea4064d2aabdff51037622673",
          "655486b6490d4ae6bb46a4c6db0a640e",
          "19ef5594db354958a7fc9320eb208d9e",
          "e3621b26218a4e059b84f3b810389549"
        ],
        "HasNestedGroups": false,
        "Left": 933.7351606736793,
        "Top": -3374.6511920069916,
        "Width": 1083.447360227633,
        "Height": 987.8988033922899,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -3301.6511920069916,
        "InitialHeight": 870.6043284883176,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "51c44fd764a3454087f86117a7d6da67",
        "Title": "Make Rebars",
        "DescriptionText": "Description <Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "adfb07fb89644f4b8e37a1efb3924d00",
          "968bfbab77d3463bbc708f336bed9bba",
          "586bbd4930ec4b7d9deab4c3b04cb3f7",
          "aea842615e1349e5bfb59ff9df1f3b56",
          "7130b68233974000a0dc2d0183e19fdd",
          "d4d72a8123804b7a9b802074360eb518"
        ],
        "HasNestedGroups": false,
        "Left": 3059.9836181536502,
        "Top": -2772.04360190464,
        "Width": 597.731711819757,
        "Height": 864.3578081615469,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -2699.04360190464,
        "InitialHeight": 804.3578081615469,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "473a36caf3ea4852a4817075dd712b18",
        "Title": "Create Rebars(Bottom Reinforcement ) Y ",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "31b09fbdb90143cebeeee60ff5630b0e",
          "a538f86da0c54923a50dd86706858ea9",
          "4f48dab6949f455dafba3927a61a9e61",
          "004d30743de64e1f9c0d509422584830",
          "eba6160409954eb196ca4aefa1b7a503",
          "629899705d45498c8f7e601ab8b9d0f3",
          "b2004b27093146e68addd9b2b941ce54",
          "9d222b3892ea4acc9040f9c100aa3cfd",
          "5e336919795e48f9b088afe1c123621c",
          "2d3cdbf8c409457f963261188e051b71"
        ],
        "HasNestedGroups": false,
        "Left": 3170.2346196117915,
        "Top": -927.68578174089,
        "Width": 759.8539067189831,
        "Height": 1108.9254856215782,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -854.68578174089,
        "InitialHeight": 1048.9254856215782,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f7d3c87d69b741baaa82b3ddfcea9dd5",
        "Title": "Create Rebars(Bottom X Reinforcement ) ",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0caf1f35a0ee4e0b9c44997a9fbb9899",
          "429dca4e5dbe4dd38f9d87f54e07bd3b",
          "e10e8195a48d4fa49230bb53f4a970c5",
          "674139e305b94063b532a49e80337360",
          "d1882d38b66b459f9a672e170f2b5b61",
          "d8e363b748454809b8fbfe09fcb015b0",
          "535d85320cd7478aab60096b7664fc93",
          "61830ea2e29640788c40755c7280a237"
        ],
        "HasNestedGroups": false,
        "Left": 3011.7238647973936,
        "Top": -1851.894795953705,
        "Width": 999.1918029180888,
        "Height": 864.357808161546,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -1778.894795953705,
        "InitialHeight": 804.357808161546,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "67e1e3b809b041749befa7c1ef13d282",
        "Title": "Host Element 3D Raft without Reinforcement",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9d7690590e8a4d659453ab89c5e4f952",
          "5b0c7c0c7d824e0893435301ba21797c",
          "fc72e8ed38c9438f98ad671195ffba67",
          "f1ac3f16309044739269bc62879f758f",
          "54b7824bbc2d4310a76c846baebdd5d3"
        ],
        "HasNestedGroups": true,
        "Left": 1712.07154578496,
        "Top": -1068.4867691439517,
        "Width": 1219.816084525949,
        "Height": 632.0970776989889,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -995.4867691439517,
        "InitialHeight": 572.0970776989889,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 3157.6428972644026,
    "Y": 2463.77060002437,
    "Zoom": 0.8611949300074351
  }
}
